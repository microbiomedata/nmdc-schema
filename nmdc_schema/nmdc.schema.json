{
   "$defs": {
      "Activity": {
         "additionalProperties": false,
         "description": "a provence-generating activity",
         "properties": {
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "used": {
               "type": "string"
            },
            "was_associated_with": {
               "$ref": "#/$defs/Agent"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "Activity",
         "type": "object"
      },
      "Agent": {
         "additionalProperties": false,
         "description": "a provence-generating agent",
         "properties": {
            "acted_on_behalf_of": {
               "$ref": "#/$defs/Agent"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [],
         "title": "Agent",
         "type": "object"
      },
      "AttributeValue": {
         "additionalProperties": false,
         "description": "The value for any value of a attribute for a sample. This object can hold both the un-normalized atomic value and the structured value",
         "properties": {
            "has_raw_value": {
               "description": "The value that was specified for an annotation in raw form, i.e. a string. E.g. \"2 cm\" or \"2-4 cm\"",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specified the type of object.",
               "type": "string"
            },
            "was_generated_by": {
               "type": "string"
            }
         },
         "required": [],
         "title": "AttributeValue",
         "type": "object"
      },
      "Biosample": {
         "additionalProperties": false,
         "description": "A material sample. It may be environmental (encompassing many organisms) or isolate or tissue.   An environmental sample containing genetic material from multiple individuals is commonly referred to as a biosample.",
         "properties": {
            "GOLD_sample_identifiers": {
               "description": "identifiers for corresponding sample in GOLD",
               "items": {
                  "type": "string"
               },
               "pattern": "^GOLD:Gb[0-9]+$",
               "type": "array"
            },
            "INSDC_biosample_identifiers": {
               "description": "identifiers for corresponding sample in INSDC",
               "items": {
                  "type": "string"
               },
               "pattern": "^biosample:SAM[NED]([A-Z])?[0-9]+$",
               "type": "array"
            },
            "INSDC_secondary_sample_identifiers": {
               "description": "secondary identifiers for corresponding sample in INSDC",
               "items": {
                  "type": "string"
               },
               "pattern": "^biosample:(E|D|S)RS[0-9]{6,}$",
               "type": "array"
            },
            "add_date": {
               "description": "The date on which the information was added to the database.",
               "type": "string"
            },
            "agrochem_addition": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Addition of fertilizers, pesticides, etc. - amount and time of applications"
            },
            "al_sat": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Aluminum saturation (esp. For tropical soils)",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "al_sat_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining Al saturation"
            },
            "alkalinity": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Alkalinity, the ability of a solution to neutralize acids to the equivalence point of carbonate or bicarbonate",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "alkalinity_method": {
               "$ref": "#/$defs/TextValue",
               "description": "Method used for alkalinity measurement"
            },
            "alkyl_diethers": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of alkyl diethers ",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "alt": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Altitude is a term used to identify heights of objects such as airplanes, space shuttles, rockets, atmospheric balloons and heights of places such as atmospheric layers and clouds. It is used to measure the height of an object which is above the earthbs surface. In this context, the altitude measurement is the vertical distance between the earth's surface above sea level and the sampled position in the air",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "aminopept_act": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Measurement of aminopeptidase activity",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "ammonium": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of ammonium in the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "annual_precpt": {
               "$ref": "#/$defs/QuantityValue",
               "description": "The average of all annual precipitation values known, or an estimated equivalent value derived by such methods as regional indexes or Isohyetal maps.",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "annual_temp": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Mean annual temperature",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "bacteria_carb_prod": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Measurement of bacterial carbon production",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "bishomohopanol": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of bishomohopanol ",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "bromide": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of bromide ",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "calcium": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of calcium in the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "carb_nitro_ratio": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Ratio of amount or concentrations of carbon to nitrogen",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "chem_administration": {
               "$ref": "#/$defs/ControlledTermValue",
               "description": "List of chemical compounds administered to the host or site where sampling occurred, and when (e.g. Antibiotics, n fertilizer, air filter); can include multiple compounds. For chemical entities of biological interest ontology (chebi) (v 163), http://purl.bioontology.org/ontology/chebi"
            },
            "chloride": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of chloride in the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "chlorophyll": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of chlorophyll",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "collection_date": {
               "$ref": "#/$defs/TimestampValue",
               "description": "The time of sampling, either as an instance (single point in time) or interval. In case no exact time is available, the date/time can be right truncated i.e. all of these are valid times: 2008-01-23T19:23:10+00:00; 2008-01-23T19:23:10; 2008-01-23; 2008-01; 2008; Except: 2008-01; 2008 all are ISO8601 compliant"
            },
            "community": {
               "type": "string"
            },
            "crop_rotation": {
               "$ref": "#/$defs/TextValue",
               "description": "Whether or not crop is rotated, and if yes, rotation schedule"
            },
            "cur_land_use": {
               "$ref": "#/$defs/TextValue",
               "description": "Present state of sample site",
               "pattern": "[cities|farmstead|industrial areas|roads\\/railroads|rock|sand|gravel|mudflats|salt flats|badlands|permanent snow or ice|saline seeps|mines\\/quarries|oil waste areas|small grains|row crops|vegetable crops|horticultural plants (e.g. tulips)|marshlands (grass,sedges,rushes)|tundra (mosses,lichens)|rangeland|pastureland (grasslands used for livestock grazing)|hayland|meadows (grasses,alfalfa,fescue,bromegrass,timothy)|shrub land (e.g. mesquite,sage\\-brush,creosote bush,shrub oak,eucalyptus)|successional shrub land (tree saplings,hazels,sumacs,chokecherry,shrub dogwoods,blackberries)|shrub crops (blueberries,nursery ornamentals,filberts)|vine crops (grapes)|conifers (e.g. pine,spruce,fir,cypress)|hardwoods (e.g. oak,hickory,elm,aspen)|intermixed hardwood and conifers|tropical (e.g. mangrove,palms)|rainforest (evergreen forest receiving >406 cm annual rainfall)|swamp (permanent or semi\\-permanent water body dominated by woody plants)|crop trees (nuts,fruit,christmas trees,nursery trees)]"
            },
            "cur_vegetation": {
               "$ref": "#/$defs/TextValue",
               "description": "Vegetation classification from one or more standard classification systems, or agricultural crop"
            },
            "cur_vegetation_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in vegetation classification "
            },
            "density": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Density of the sample, which is its mass per unit volume (aka volumetric mass density)",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "depth": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Depth is defined as the vertical distance below local surface, e.g. For sediment or soil samples depth is measured from sediment or soil surface, respectively. Depth can be reported as an interval for subsurface samples"
            },
            "depth2": {
               "$ref": "#/$defs/QuantityValue"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "diss_carb_dioxide": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of dissolved carbon dioxide in the sample or liquid portion of the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "diss_hydrogen": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of dissolved hydrogen",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "diss_inorg_carb": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Dissolved inorganic carbon concentration in the sample, typically measured after filtering the sample using a 0.45 micrometer filter",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "diss_inorg_phosp": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of dissolved inorganic phosphorus in the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "diss_org_carb": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of dissolved organic carbon in the sample, liquid portion of the sample, or aqueous phase of the fluid",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "diss_org_nitro": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Dissolved organic nitrogen concentration measured as; total dissolved nitrogen - NH4 - NO3 - NO2",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "diss_oxygen": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of dissolved oxygen",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "drainage_class": {
               "$ref": "#/$defs/TextValue",
               "description": "Drainage classification from a standard system such as the USDA system",
               "pattern": "[very poorly|poorly|somewhat poorly|moderately well|well|excessively drained]"
            },
            "ecosystem": {
               "description": "An ecosystem is a combination of a physical environment (abiotic factors) and all the organisms (biotic factors) that interact with this environment. Ecosystem is in position 1/5 in a GOLD path.",
               "type": "string"
            },
            "ecosystem_category": {
               "description": "Ecosystem categories represent divisions within the ecosystem based on specific characteristics of the environment from where an organism or sample is isolated. Ecosystem category is in position 2/5 in a GOLD path.",
               "type": "string"
            },
            "ecosystem_subtype": {
               "description": "Ecosystem subtypes represent further subdivision of Ecosystem types into more distinct subtypes. Ecosystem subtype is in position 4/5 in a GOLD path.",
               "type": "string"
            },
            "ecosystem_type": {
               "description": "Ecosystem types represent things having common characteristics within the Ecosystem Category. These common characteristics based grouping is still broad but specific to the characteristics of a given environment. Ecosystem type is in position 3/5 in a GOLD path.",
               "type": "string"
            },
            "elev": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Elevation of the sampling site is its height above a fixed reference point, most commonly the mean sea level. Elevation is mainly used when referring to points on the earth's surface, while altitude is used for points above the surface, such as an aircraft in flight or a spacecraft in orbit",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "env_broad_scale": {
               "$ref": "#/$defs/ControlledTermValue",
               "description": "In this field, report which major environmental system your sample or specimen came from. The systems identified should have a coarse spatial grain, to provide the general environmental context of where the sampling was done (e.g. were you in the desert or a rainforest?). We recommend using subclasses of ENVOUs biome class: http://purl.obolibrary.org/obo/ENVO_00000428. Format (one term): termLabel [termID], Format (multiple terms): termLabel [termID]|termLabel [termID]|termLabel [termID]. Example: Annotating a water sample from the photic zone in middle of the Atlantic Ocean, consider: oceanic epipelagic zone biome [ENVO:01000033]. Example: Annotating a sample from the Amazon rainforest consider: tropical moist broadleaf forest biome [ENVO:01000228]. If needed, request new terms on the ENVO tracker, identified here: http://www.obofoundry.org/ontology/envo.html",
               "pattern": ".* \\S+:\\S+"
            },
            "env_local_scale": {
               "$ref": "#/$defs/ControlledTermValue",
               "description": "In this field, report the entity or entities which are in your sample or specimenUs local vicinity and which you believe have significant causal influences on your sample or specimen. Please use terms that are present in ENVO and which are of smaller spatial grain than your entry for env_broad_scale. Format (one term): termLabel [termID]; Format (multiple terms): termLabel [termID]|termLabel [termID]|termLabel [termID]. Example: Annotating a pooled sample taken from various vegetation layers in a forest consider: canopy [ENVO:00000047]|herb and fern layer [ENVO:01000337]|litter layer [ENVO:01000338]|understory [01000335]|shrub layer [ENVO:01000336]. If needed, request new terms on the ENVO tracker, identified here: http://www.obofoundry.org/ontology/envo.html",
               "pattern": ".* \\S+:\\S+"
            },
            "env_medium": {
               "$ref": "#/$defs/ControlledTermValue",
               "description": "In this field, report which environmental material or materials (pipe separated) immediately surrounded your sample or specimen prior to sampling, using one or more subclasses of ENVOUs environmental material class: http://purl.obolibrary.org/obo/ENVO_00010483. Format (one term): termLabel [termID]; Format (multiple terms): termLabel [termID]|termLabel [termID]|termLabel [termID]. Example: Annotating a fish swimming in the upper 100 m of the Atlantic Ocean, consider: ocean water [ENVO:00002151]. Example: Annotating a duck on a pond consider: pond water [ENVO:00002228]|air ENVO_00002005. If needed, request new terms on the ENVO tracker, identified here: http://www.obofoundry.org/ontology/envo.html",
               "pattern": ".* \\S+:\\S+"
            },
            "env_package": {
               "$ref": "#/$defs/TextValue",
               "description": "MIxS extension for reporting of measurements and observations obtained from one or more of the environments where the sample was obtained. All environmental packages listed here are further defined in separate subtables. By giving the name of the environmental package, a selection of fields can be made from the subtables and can be reported",
               "pattern": "[air|built environment|host\\-associated|human\\-associated|human\\-skin|human\\-oral|human\\-gut|human\\-vaginal|hydrocarbon resources\\-cores|hydrocarbon resources\\-fluids\\/swabs|microbial mat\\/biofilm|misc environment|plant\\-associated|sediment|soil|wastewater\\/sludge|water]"
            },
            "extreme_event": {
               "$ref": "#/$defs/TimestampValue",
               "description": "Unusual physical events that may have affected microbial populations"
            },
            "fao_class": {
               "$ref": "#/$defs/TextValue",
               "description": "Soil classification from the FAO World Reference Database for Soil Resources. The list can be found at http://www.fao.org/nr/land/sols/soil/wrb-soil-maps/reference-groups",
               "pattern": "[Acrisols|Andosols|Arenosols|Cambisols|Chernozems|Ferralsols|Fluvisols|Gleysols|Greyzems|Gypsisols|Histosols|Kastanozems|Lithosols|Luvisols|Nitosols|Phaeozems|Planosols|Podzols|Podzoluvisols|Rankers|Regosols|Rendzinas|Solonchaks|Solonetz|Vertisols|Yermosols]"
            },
            "fire": {
               "$ref": "#/$defs/TimestampValue",
               "description": "Historical and/or physical evidence of fire"
            },
            "flooding": {
               "$ref": "#/$defs/TimestampValue",
               "description": "Historical and/or physical evidence of flooding"
            },
            "geo_loc_name": {
               "$ref": "#/$defs/TextValue",
               "description": "The geographical origin of the sample as defined by the country or sea name followed by specific region name. Country or sea names should be chosen from the INSDC country list (http://insdc.org/country.html), or the GAZ ontology (v 1.512) (http://purl.bioontology.org/ontology/GAZ)"
            },
            "glucosidase_act": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Measurement of glucosidase activity",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "habitat": {
               "type": "string"
            },
            "heavy_metals": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Heavy metals present and concentrationsany drug used by subject and the frequency of usage; can include multiple heavy metals and concentrations"
            },
            "heavy_metals_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining heavy metals"
            },
            "horizon": {
               "$ref": "#/$defs/TextValue",
               "description": "Specific layer in the land area which measures parallel to the soil surface and possesses physical characteristics which differ from the layers above and beneath",
               "pattern": "[O horizon|A horizon|E horizon|B horizon|C horizon|R layer|Permafrost]"
            },
            "horizon_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining the horizon"
            },
            "host_name": {
               "type": "string"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "identifier": {
               "type": "string"
            },
            "lat_lon": {
               "$ref": "#/$defs/GeolocationValue",
               "description": "This is currently a required field but it's not clear if this should be required for human hosts",
               "pattern": "\\d+[.\\d+] \\d+[.\\d+]"
            },
            "link_addit_analys": {
               "$ref": "#/$defs/TextValue",
               "description": "Link to additional analysis results performed on the sample"
            },
            "link_class_info": {
               "$ref": "#/$defs/TextValue",
               "description": "Link to digitized soil maps or other soil classification information"
            },
            "link_climate_info": {
               "$ref": "#/$defs/TextValue",
               "description": "Link to climate resource"
            },
            "local_class": {
               "$ref": "#/$defs/TextValue",
               "description": "Soil classification based on local soil classification system"
            },
            "local_class_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining the local soil classification "
            },
            "location": {
               "type": "string"
            },
            "magnesium": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of magnesium in the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "mean_frict_vel": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Measurement of mean friction velocity",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "mean_peak_frict_vel": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Measurement of mean peak friction velocity",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "microbial_biomass": {
               "$ref": "#/$defs/QuantityValue",
               "description": "The part of the organic matter in the soil that constitutes living microorganisms smaller than 5-10 micrometer. If you keep this, you would need to have correction factors used for conversion to the final units",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "microbial_biomass_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining microbial biomass"
            },
            "misc_param": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Any other measurement performed or parameter collected, that is not listed here"
            },
            "mod_date": {
               "description": "The last date on which the database information was modified.",
               "type": "string"
            },
            "n_alkanes": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of n-alkanes; can include multiple n-alkanes"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "ncbi_taxonomy_name": {
               "type": "string"
            },
            "nitrate": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of nitrate in the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "nitrite": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of nitrite in the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "org_matter": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of organic matter ",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "org_nitro": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of organic nitrogen",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "organism_count": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Total cell count of any organism (or group of organisms) per gram, volume or area of sample, should include name of organism followed by count. The method that was used for the enumeration (e.g. qPCR, atp, mpn, etc.) Should also be provided. (example: total prokaryotes; 3.5e7 cells per ml; qpcr)"
            },
            "oxy_stat_samp": {
               "$ref": "#/$defs/TextValue",
               "description": "Oxygenation status of sample",
               "pattern": "[aerobic|anaerobic|other]"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "part_org_carb": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of particulate organic carbon",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "perturbation": {
               "$ref": "#/$defs/TextValue",
               "description": "Type of perturbation, e.g. chemical administration, physical disturbance, etc., coupled with perturbation regimen including how many times the perturbation was repeated, how long each perturbation lasted, and the start and end time of the entire perturbation period; can include multiple perturbation types"
            },
            "petroleum_hydrocarb": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of petroleum hydrocarbon",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "ph": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Ph measurement of the sample, or liquid portion of sample, or aqueous phase of the fluid",
               "pattern": "\\d+[.\\d+]"
            },
            "ph_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining ph"
            },
            "phaeopigments": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of phaeopigments; can include multiple phaeopigments"
            },
            "phosplipid_fatt_acid": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of phospholipid fatty acids; can include multiple values"
            },
            "pool_dna_extracts": {
               "$ref": "#/$defs/TextValue",
               "description": "Indicate whether multiple DNA extractions were mixed. If the answer yes, the number of extracts that were pooled should be given"
            },
            "potassium": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of potassium in the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "pressure": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Pressure to which the sample is subject to, in atmospheres",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "previous_land_use": {
               "$ref": "#/$defs/TextValue",
               "description": "Previous land use and dates"
            },
            "previous_land_use_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining previous land use and dates"
            },
            "profile_position": {
               "$ref": "#/$defs/TextValue",
               "description": "Cross-sectional position in the hillslope where sample was collected.sample area position in relation to surrounding areas",
               "pattern": "[summit|shoulder|backslope|footslope|toeslope]"
            },
            "proport_woa_temperature": {
               "type": "string"
            },
            "redox_potential": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Redox potential, measured relative to a hydrogen cell, indicating oxidation or reduction potential",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "salinity": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Salinity is the total concentration of all dissolved salts in a water sample. While salinity can be measured by a complete chemical analysis, this method is difficult and time consuming. More often, it is instead derived from the conductivity measurement. This is known as practical salinity. These derivations compare the specific conductance of the sample to a salinity standard such as seawater",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "salinity_category": {
               "description": "Categorcial description of the sample's salinity. Examples: halophile, halotolerant, hypersaline, huryhaline",
               "type": "string"
            },
            "salinity_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining salinity"
            },
            "samp_collect_device": {
               "$ref": "#/$defs/TextValue",
               "description": "The method or device employed for collecting the sample"
            },
            "samp_mat_process": {
               "$ref": "#/$defs/ControlledTermValue",
               "description": "Any processing applied to the sample during or after retrieving the sample from environment. This field accepts OBI, for a browser of OBI (v 2018-02-12) terms please see http://purl.bioontology.org/ontology/OBI"
            },
            "samp_store_dur": {
               "$ref": "#/$defs/TextValue",
               "description": "Duration for which the sample was stored"
            },
            "samp_store_loc": {
               "$ref": "#/$defs/TextValue",
               "description": "Location at which sample was stored, usually name of a specific freezer/room"
            },
            "samp_store_temp": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Temperature at which sample was stored, e.g. -80 degree Celsius",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "samp_vol_we_dna_ext": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Volume (ml), weight (g) of processed sample, or surface area swabbed from sample for DNA extraction",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "sample_collection_site": {
               "type": "string"
            },
            "season_precpt": {
               "$ref": "#/$defs/QuantityValue",
               "description": "The average of all seasonal precipitation values known, or an estimated equivalent value derived by such methods as regional indexes or Isohyetal maps.",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "season_temp": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Mean seasonal temperature",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "sieving": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Collection design of pooled samples and/or sieve size and amount of sample sieved "
            },
            "size_frac_low": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Refers to the mesh/pore size used to pre-filter/pre-sort the sample. Materials larger than the size threshold are excluded from the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "size_frac_up": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Refers to the mesh/pore size used to retain the sample. Materials smaller than the size threshold are excluded from the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "slope_aspect": {
               "$ref": "#/$defs/QuantityValue",
               "description": "The direction a slope faces. While looking down a slope use a compass to record the direction you are facing (direction or degrees); e.g., nw or 315 degrees. This measure provides an indication of sun and wind exposure that will influence soil temperature and evapotranspiration.",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "slope_gradient": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Commonly called 'slope'. The angle between ground surface and a horizontal line (in percent). This is the direction that overland water would flow. This measure is usually taken with a hand level meter or clinometer",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "sodium": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Sodium concentration in the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "soil_type": {
               "$ref": "#/$defs/TextValue",
               "description": "Soil series name or other lower-level classification"
            },
            "soil_type_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining soil series name or other lower-level classification"
            },
            "soluble_iron_micromol": {
               "type": "string"
            },
            "specific_ecosystem": {
               "description": "Specific ecosystems represent specific features of the environment like aphotic zone in an ocean or gastric mucosa within a host digestive system. Specific ecosystem is in position 5/5 in a GOLD path.",
               "type": "string"
            },
            "store_cond": {
               "$ref": "#/$defs/TextValue",
               "description": "Explain how and for how long the soil sample was stored before DNA extraction"
            },
            "subsurface_depth": {
               "$ref": "#/$defs/QuantityValue"
            },
            "subsurface_depth2": {
               "$ref": "#/$defs/QuantityValue"
            },
            "sulfate": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of sulfate in the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "sulfide": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Concentration of sulfide in the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "temp": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Temperature of the sample at the time of sampling",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "texture": {
               "$ref": "#/$defs/QuantityValue",
               "description": "The relative proportion of different grain sizes of mineral particles in a soil, as described using a standard system; express as % sand (50 um to 2 mm), silt (2 um to 50 um), and clay (<2 um) with textural name (e.g., silty clay loam) optional.",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "texture_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining soil texture"
            },
            "tidal_stage": {
               "$ref": "#/$defs/TextValue",
               "description": "Stage of tide",
               "pattern": "[low tide|ebb tide|flood tide|high tide]"
            },
            "tillage": {
               "$ref": "#/$defs/TextValue",
               "description": "Note method(s) used for tilling",
               "pattern": "[drill|cutting disc|ridge till|strip tillage|zonal tillage|chisel|tined|mouldboard|disc plough]"
            },
            "tot_carb": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Total carbon content",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "tot_depth_water_col": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Measurement of total depth of water column",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "tot_diss_nitro": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Total dissolved nitrogen concentration, reported as nitrogen, measured by: total dissolved nitrogen = NH4 + NO3NO2 + dissolved organic nitrogen",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "tot_nitro_content": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Total nitrogen content of the sample",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "tot_nitro_content_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining the total nitrogen"
            },
            "tot_org_c_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining total organic carbon"
            },
            "tot_org_carb": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Definition for soil: total organic carbon content of the soil, definition otherwise: total organic carbon content",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "tot_phosp": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Total phosphorus concentration in the sample, calculated by: total phosphorus = total dissolved phosphorus + particulate phosphorus",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "water_content": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Water content measurement",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "water_content_soil_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Reference or method used in determining the water content of soil"
            }
         },
         "required": [
            "id",
            "part_of",
            "env_broad_scale",
            "env_local_scale",
            "env_medium"
         ],
         "title": "Biosample",
         "type": "object"
      },
      "BiosampleProcessing": {
         "additionalProperties": false,
         "description": "A process that takes one or more biosamples as inputs and generates one or as outputs. Examples of outputs include samples cultivated from another sample or data objects created by instruments runs.",
         "properties": {
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "BiosampleProcessing",
         "type": "object"
      },
      "BooleanValue": {
         "additionalProperties": false,
         "description": "A value that is a boolean",
         "properties": {
            "has_boolean_value": {
               "description": "Links a quantity value to a boolean",
               "type": "boolean"
            },
            "has_raw_value": {
               "description": "The value that was specified for an annotation in raw form, i.e. a string. E.g. \"2 cm\" or \"2-4 cm\"",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specified the type of object.",
               "type": "string"
            },
            "was_generated_by": {
               "type": "string"
            }
         },
         "required": [],
         "title": "BooleanValue",
         "type": "object"
      },
      "ChemicalEntity": {
         "additionalProperties": false,
         "description": "An atom or molecule that can be represented with a chemical formula. Include lipids, glycans, natural products, drugs. There may be different terms for distinct acid-base forms, protonation states",
         "properties": {
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "chemical_formula": {
               "description": "A generic grouping for miolecular formulae and empirican formulae",
               "type": "string"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "inchi": {
               "type": "string"
            },
            "inchi_key": {
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "smiles": {
               "description": "A string encoding of a molecular graph, no chiral or isotopic information. There are usually a large number of valid SMILES which represent a given structure. For example, CCO, OCC and C(O)C all specify the structure of ethanol.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "ChemicalEntity",
         "type": "object"
      },
      "ControlledTermValue": {
         "additionalProperties": false,
         "description": "A controlled term or class from an ontology",
         "properties": {
            "has_raw_value": {
               "description": "The value that was specified for an annotation in raw form, i.e. a string. E.g. \"2 cm\" or \"2-4 cm\"",
               "type": "string"
            },
            "term": {
               "$ref": "#/$defs/OntologyClass",
               "description": "pointer to an ontology class"
            },
            "type": {
               "description": "An optional string that specified the type of object.",
               "type": "string"
            },
            "was_generated_by": {
               "type": "string"
            }
         },
         "required": [],
         "title": "ControlledTermValue",
         "type": "object"
      },
      "CreditAssociation": {
         "additionalProperties": false,
         "description": "This class supports binding associated researchers to studies. There will be at least a slot for a CRediT Contributor Role (https://casrai.org/credit/) and for a person value Specifically see the associated researchers tab on the NMDC_SampleMetadata-V4_CommentsForUpdates at https://docs.google.com/spreadsheets/d/1INlBo5eoqn2efn4H2P2i8rwRBtnbDVTqXrochJEAPko/edit#gid=0",
         "properties": {
            "applied_role": {
               "$ref": "#/$defs/CreditEnum"
            },
            "applied_roles": {
               "items": {
                  "$ref": "#/$defs/CreditEnum"
               },
               "type": "array"
            },
            "applies_to_person": {
               "$ref": "#/$defs/PersonValue"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            }
         },
         "required": [
            "applies_to_person",
            "applied_roles"
         ],
         "title": "CreditAssociation",
         "type": "object"
      },
      "CreditEnum": {
         "description": "",
         "enum": [
            "Conceptualization",
            "Data curation",
            "Formal Analysis",
            "Funding acquisition",
            "Investigation",
            "Methodology",
            "Project administration",
            "Resources",
            "Software",
            "Supervision",
            "Validation",
            "Visualization",
            "Writing original draft",
            "Writing review and editing",
            "Principal Investigator"
         ],
         "title": "CreditEnum",
         "type": "string"
      },
      "DataObject": {
         "additionalProperties": false,
         "description": "An object that primarily consists of symbols that represent information.   Files, records, and omics data are examples of data objects.",
         "properties": {
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "compression_type": {
               "description": "If provided, specifies the compression type",
               "type": "string"
            },
            "data_object_type": {
               "$ref": "#/$defs/FileTypeEnum",
               "description": "The type of file represented by the data object."
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "file_size_bytes": {
               "description": "Size of the file in bytes",
               "type": "integer"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "md5_checksum": {
               "description": "MD5 checksum of file (pre-compressed)",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "url": {
               "type": "string"
            },
            "was_generated_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "name",
            "description"
         ],
         "title": "DataObject",
         "type": "object"
      },
      "Database": {
         "additionalProperties": false,
         "description": "An abstract holder for any set of metadata and data. It does not need to correspond to an actual managed databse top level holder class. When translated to JSON-Schema this is the 'root' object. It should contain pointers to other objects of interest",
         "properties": {
            "activity_set": {
               "description": "This property links a database object to the set of workflow activities.",
               "items": {
                  "$ref": "#/$defs/WorkflowExecutionActivity"
               },
               "type": "array"
            },
            "biosample_set": {
               "description": "This property links a database object to the set of samples within it.",
               "items": {
                  "$ref": "#/$defs/Biosample"
               },
               "type": "array"
            },
            "data_object_set": {
               "description": "This property links a database object to the set of data objects within it.",
               "items": {
                  "$ref": "#/$defs/DataObject"
               },
               "type": "array"
            },
            "date_created": {
               "description": "TODO",
               "type": "string"
            },
            "etl_software_version": {
               "description": "TODO",
               "type": "string"
            },
            "functional_annotation_set": {
               "description": "This property links a database object to the set of all functional annotations",
               "items": {
                  "$ref": "#/$defs/FunctionalAnnotation"
               },
               "type": "array"
            },
            "genome_feature_set": {
               "description": "This property links a database object to the set of all features",
               "items": {
                  "$ref": "#/$defs/GenomeFeature"
               },
               "type": "array"
            },
            "mags_activity_set": {
               "description": "This property links a database object to the set of MAGs analysis activities.",
               "items": {
                  "$ref": "#/$defs/MAGsAnalysisActivity"
               },
               "type": "array"
            },
            "metabolomics_analysis_activity_set": {
               "description": "This property links a database object to the set of metabolomics analysis activities.",
               "items": {
                  "$ref": "#/$defs/MetabolomicsAnalysisActivity"
               },
               "type": "array"
            },
            "metagenome_annotation_activity_set": {
               "description": "This property links a database object to the set of metagenome annotation activities.",
               "items": {
                  "$ref": "#/$defs/MetagenomeAnnotationActivity"
               },
               "type": "array"
            },
            "metagenome_assembly_set": {
               "description": "This property links a database object to the set of metagenome assembly activities.",
               "items": {
                  "$ref": "#/$defs/MetagenomeAssembly"
               },
               "type": "array"
            },
            "metaproteomics_analysis_activity_set": {
               "description": "This property links a database object to the set of metaproteomics analysis activities.",
               "items": {
                  "$ref": "#/$defs/MetaproteomicsAnalysisActivity"
               },
               "type": "array"
            },
            "metatranscriptome_activity_set": {
               "description": "This property links a database object to the set of metatranscriptome analysis activities.",
               "items": {
                  "$ref": "#/$defs/MetatranscriptomeActivity"
               },
               "type": "array"
            },
            "nmdc_schema_version": {
               "description": "TODO",
               "type": "string"
            },
            "nom_analysis_activity_set": {
               "description": "This property links a database object to the set of natural organic matter (NOM) analysis activities.",
               "items": {
                  "$ref": "#/$defs/NomAnalysisActivity"
               },
               "type": "array"
            },
            "omics_processing_set": {
               "description": "This property links a database object to the set of omics processings within it.",
               "items": {
                  "$ref": "#/$defs/OmicsProcessing"
               },
               "type": "array"
            },
            "read_QC_analysis_activity_set": {
               "description": "This property links a database object to the set of read QC analysis activities.",
               "items": {
                  "$ref": "#/$defs/ReadQCAnalysisActivity"
               },
               "type": "array"
            },
            "read_based_analysis_activity_set": {
               "description": "This property links a database object to the set of read based analysis activities.\n  ",
               "items": {
                  "$ref": "#/$defs/ReadBasedAnalysisActivity"
               },
               "type": "array"
            },
            "study_set": {
               "description": "This property links a database object to the set of studies within it.",
               "items": {
                  "$ref": "#/$defs/Study"
               },
               "type": "array"
            }
         },
         "required": [],
         "title": "Database",
         "type": "object"
      },
      "EnvironmentalMaterialTerm": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "EnvironmentalMaterialTerm",
         "type": "object"
      },
      "FileTypeEnum": {
         "description": "",
         "enum": [
            "FT ICR-MS Analysis Results",
            "GC-MS Metabolomics Results",
            "Metaproteomics Workflow Statistics",
            "Protein Report",
            "Peptide Report",
            "Unfiltered Metaproteomics Results",
            "Read Count and RPKM",
            "QC non-rRNA R2",
            "QC non-rRNA R1",
            "Metagenome Bins",
            "CheckM Statistics",
            "GOTTCHA2 Krona Plot",
            "Kraken2 Krona Plot",
            "Centrifuge Krona Plot",
            "Kraken2 Classification Report",
            "Kraken2 Taxonomic Classification",
            "Centrifuge Classification Report",
            "Centrifuge Taxonomic Classification",
            "Structural Annotation GFF",
            "Functional Annotation GFF",
            "Annotation Amino Acid FASTA",
            "Annotation Enzyme Commission",
            "Annotation KEGG Orthology",
            "Assembly Coverage BAM",
            "Assembly AGP",
            "Assembly Scaffolds",
            "Assembly Contigs",
            "Assembly Coverage Stats",
            "Filtered Sequencing Reads",
            "QC Statistics",
            "TIGRFam Annotation GFF",
            "Clusters of Orthologous Groups (COG) Annotation GFF",
            "CATH FunFams (Functional Families) Annotation GFF",
            "SUPERFam Annotation GFF",
            "SMART Annotation GFF",
            "Pfam Annotation GFF",
            "Direct Infusion FT ICR-MS Raw Data"
         ],
         "title": "FileTypeEnum",
         "type": "string"
      },
      "FunctionalAnnotation": {
         "additionalProperties": false,
         "description": "An assignment of a function term (e.g. reaction or pathway) that is executed by a gene product, or which the gene product plays an active role in. Functional annotations can be assigned manually by curators, or automatically in workflows. In the context of NMDC, all function annotation is performed automatically, typically using HMM or Blast type methods",
         "properties": {
            "has_function": {
               "pattern": "^(KEGG.PATHWAY:\\w{2,4}\\d{5}|KEGG.REACTION:R\\d+|RHEA:\\d{5}|MetaCyc:[A-Za-z0-9+_.%-:]+|EC:\\d{1,2}(\\.\\d{0,3}){0,3}|GO:\\d{7}|MetaNetX:(MNXR\\d+|EMPTY)|SEED:\\w+|KEGG\\.ORTHOLOGY:K\\d+|EGGNOG:\\w+|PFAM:PF\\d{5}|TIGRFAM:TIGR\\d+|SUPFAM:\\w+|CATH:[1-6]\\.[0-9]+\\.[0-9]+\\.[0-9]+|PANTHER.FAMILY:PTHR\\d{5}(\\:SF\\d{1,3})?)$",
               "type": "string"
            },
            "subject": {
               "type": "string"
            },
            "type": {
               "description": "TODO",
               "type": "string"
            },
            "was_generated_by": {
               "description": "provenance for the annotation.",
               "type": "string"
            }
         },
         "required": [],
         "title": "FunctionalAnnotation",
         "type": "object"
      },
      "GeneProduct": {
         "additionalProperties": false,
         "description": "A molecule encoded by a gene that has an evolved function",
         "properties": {
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "GeneProduct",
         "type": "object"
      },
      "GenomeFeature": {
         "additionalProperties": false,
         "description": "A feature localized to an interval along a genome",
         "properties": {
            "encodes": {
               "description": "The gene product encoded by this feature. Typically this is used for a CDS feature or gene feature which will encode a protein. It can also be used by a nc transcript ot gene feature that encoded a ncRNA",
               "type": "string"
            },
            "end": {
               "description": "The end of the feature in positive 1-based integer coordinates",
               "minimum": 1,
               "type": "integer"
            },
            "feature_type": {
               "description": "TODO: Yuri to write",
               "type": "string"
            },
            "phase": {
               "description": "The phase for a coding sequence entity. For example, phase of a CDS as represented in a GFF3 with a value of 0, 1 or 2.",
               "maximum": 0,
               "minimum": 0,
               "type": "integer"
            },
            "seqid": {
               "description": "The ID of the landmark used to establish the coordinate system for the current feature.",
               "type": "string"
            },
            "start": {
               "description": "The start of the feature in positive 1-based integer coordinates",
               "minimum": 1,
               "type": "integer"
            },
            "strand": {
               "description": "The strand on which a feature is located. Has a value of '+' (sense strand or forward strand) or '-' (anti-sense strand or reverse strand).",
               "type": "string"
            },
            "type": {
               "description": "A type from the sequence ontology",
               "type": "string"
            }
         },
         "required": [
            "seqid",
            "start",
            "end"
         ],
         "title": "GenomeFeature",
         "type": "object"
      },
      "GeolocationValue": {
         "additionalProperties": false,
         "description": "A normalized value for a location on the earth's surface",
         "properties": {
            "has_raw_value": {
               "description": "The raw value for a  geolocation should follow {lat} {long}",
               "type": "string"
            },
            "latitude": {
               "description": "latitude",
               "type": "number"
            },
            "longitude": {
               "description": "longitude",
               "type": "number"
            },
            "type": {
               "description": "An optional string that specified the type of object.",
               "type": "string"
            },
            "was_generated_by": {
               "type": "string"
            }
         },
         "required": [],
         "title": "GeolocationValue",
         "type": "object"
      },
      "ImageValue": {
         "additionalProperties": false,
         "description": "An attribute value representing an image.",
         "properties": {
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "display_order": {
               "description": "When rendering information, this attribute to specify the order in which the information should be rendered.",
               "type": "string"
            },
            "has_raw_value": {
               "description": "The value that was specified for an annotation in raw form, i.e. a string. E.g. \"2 cm\" or \"2-4 cm\"",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specified the type of object.",
               "type": "string"
            },
            "url": {
               "type": "string"
            },
            "was_generated_by": {
               "type": "string"
            }
         },
         "required": [],
         "title": "ImageValue",
         "type": "object"
      },
      "Instrument": {
         "additionalProperties": false,
         "description": "A material entity that is designed to perform a function in a scientific investigation, but is not a reagent[OBI].",
         "properties": {
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "Instrument",
         "type": "object"
      },
      "IntegerValue": {
         "additionalProperties": false,
         "description": "A value that is an integer",
         "properties": {
            "has_numeric_value": {
               "description": "Links a quantity value to a number",
               "type": "number"
            },
            "has_raw_value": {
               "description": "The value that was specified for an annotation in raw form, i.e. a string. E.g. \"2 cm\" or \"2-4 cm\"",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specified the type of object.",
               "type": "string"
            },
            "was_generated_by": {
               "type": "string"
            }
         },
         "required": [],
         "title": "IntegerValue",
         "type": "object"
      },
      "MAGBin": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "bin_name": {
               "type": "string"
            },
            "bin_quality": {
               "type": "string"
            },
            "completeness": {
               "type": "number"
            },
            "contamination": {
               "type": "number"
            },
            "gene_count": {
               "type": "integer"
            },
            "gtdbtk_class": {
               "type": "string"
            },
            "gtdbtk_domain": {
               "type": "string"
            },
            "gtdbtk_family": {
               "type": "string"
            },
            "gtdbtk_genus": {
               "type": "string"
            },
            "gtdbtk_order": {
               "type": "string"
            },
            "gtdbtk_phylum": {
               "type": "string"
            },
            "gtdbtk_species": {
               "type": "string"
            },
            "num_16s": {
               "type": "integer"
            },
            "num_23s": {
               "type": "integer"
            },
            "num_5s": {
               "type": "integer"
            },
            "num_tRNA": {
               "type": "integer"
            },
            "number_of_contig": {
               "type": "integer"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            }
         },
         "required": [],
         "title": "MAGBin",
         "type": "object"
      },
      "MAGsAnalysisActivity": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "binned_contig_num": {
               "type": "integer"
            },
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "execution_resource": {
               "description": "Example: NERSC-Cori",
               "type": "string"
            },
            "git_url": {
               "description": "Example: https://github.com/microbiomedata/mg_annotation/releases/tag/0.1",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "input_contig_num": {
               "type": "integer"
            },
            "lowDepth_contig_num": {
               "type": "integer"
            },
            "mags_list": {
               "items": {
                  "$ref": "#/$defs/MAGBin"
               },
               "type": "array"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "too_short_contig_num": {
               "type": "integer"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "unbinned_contig_num": {
               "type": "integer"
            },
            "used": {
               "type": "string"
            },
            "was_associated_with": {
               "description": "the agent/entity associated with the generation of the file",
               "type": "string"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "execution_resource",
            "git_url",
            "has_input",
            "has_output",
            "type",
            "started_at_time",
            "ended_at_time",
            "was_informed_by"
         ],
         "title": "MAGsAnalysisActivity",
         "type": "object"
      },
      "MetaboliteQuantification": {
         "additionalProperties": false,
         "description": "This is used to link a metabolomics analysis workflow to a specific metabolite",
         "properties": {
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "highest_similarity_score": {
               "description": "TODO: Yuri to fill in",
               "type": "number"
            },
            "metabolite_quantified": {
               "description": "the specific metabolite identifier",
               "type": "string"
            }
         },
         "required": [],
         "title": "MetaboliteQuantification",
         "type": "object"
      },
      "MetabolomicsAnalysisActivity": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "execution_resource": {
               "description": "Example: NERSC-Cori",
               "type": "string"
            },
            "git_url": {
               "description": "Example: https://github.com/microbiomedata/mg_annotation/releases/tag/0.1",
               "type": "string"
            },
            "has_calibration": {
               "description": "TODO: Yuri to fill in",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_metabolite_quantifications": {
               "items": {
                  "$ref": "#/$defs/MetaboliteQuantification"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "used": {
               "description": "The instrument used to collect the data used in the analysis",
               "type": "string"
            },
            "was_associated_with": {
               "description": "the agent/entity associated with the generation of the file",
               "type": "string"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "execution_resource",
            "git_url",
            "has_input",
            "has_output",
            "type",
            "started_at_time",
            "ended_at_time",
            "was_informed_by"
         ],
         "title": "MetabolomicsAnalysisActivity",
         "type": "object"
      },
      "MetagenomeAnnotationActivity": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "execution_resource": {
               "description": "Example: NERSC-Cori",
               "type": "string"
            },
            "git_url": {
               "description": "Example: https://github.com/microbiomedata/mg_annotation/releases/tag/0.1",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "used": {
               "type": "string"
            },
            "was_associated_with": {
               "description": "the agent/entity associated with the generation of the file",
               "type": "string"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "execution_resource",
            "git_url",
            "has_input",
            "has_output",
            "type",
            "started_at_time",
            "ended_at_time",
            "was_informed_by"
         ],
         "title": "MetagenomeAnnotationActivity",
         "type": "object"
      },
      "MetagenomeAssembly": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "INSDC_assembly_identifiers": {
               "pattern": "^insdc.sra:[A-Z]+[0-9]+(\\.[0-9]+)?$",
               "type": "string"
            },
            "asm_score": {
               "description": "A score for comparing metagenomic assembly quality from same sample.",
               "type": "number"
            },
            "contig_bp": {
               "description": "Total size in bp of all contigs.",
               "type": "number"
            },
            "contigs": {
               "description": "The sum of the (length*log(length)) of all contigs, times some constant.  Increase the contiguity, the score will increase",
               "type": "number"
            },
            "ctg_L50": {
               "description": "Given a set of contigs, the L50 is defined as the sequence length of the shortest contig at 50% of the total genome length.",
               "type": "number"
            },
            "ctg_L90": {
               "description": "The L90 statistic is less than or equal to the L50 statistic; it is the length for which the collection of all contigs of that length or longer contains at least 90% of the sum of the lengths of all contigs.",
               "type": "number"
            },
            "ctg_N50": {
               "description": "Given a set of contigs, each with its own length, the N50 count is defined as the smallest number of contigs whose length sum makes up half of genome size.",
               "type": "number"
            },
            "ctg_N90": {
               "description": "Given a set of contigs, each with its own length, the N90 count is defined as the smallest number of contigs whose length sum makes up 90% of genome size.",
               "type": "number"
            },
            "ctg_logsum": {
               "description": "Maximum contig length.",
               "type": "number"
            },
            "ctg_max": {
               "description": "Maximum contig length.",
               "type": "number"
            },
            "ctg_powsum": {
               "description": "Powersum of all contigs is the same as logsum except that it uses the sum of (length*(length^P)) for some power P (default P=0.25).",
               "type": "number"
            },
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "execution_resource": {
               "description": "Example: NERSC-Cori",
               "type": "string"
            },
            "gap_pct": {
               "description": "The gap size percentage of all scaffolds.",
               "type": "number"
            },
            "gc_avg": {
               "description": "Average of GC content of all contigs.",
               "type": "number"
            },
            "gc_std": {
               "description": "Standard deviation of GC content of all contigs.",
               "type": "number"
            },
            "git_url": {
               "description": "Example: https://github.com/microbiomedata/mg_annotation/releases/tag/0.1",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "num_aligned_reads": {
               "description": "The sequence count number of input reads aligned to assembled contigs.",
               "type": "number"
            },
            "num_input_reads": {
               "description": "The sequence count number of input reads for assembly.",
               "type": "number"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "scaf_L50": {
               "description": "Given a set of scaffolds, the L50 is defined as the sequence length of the shortest scaffold at 50% of the total genome length.",
               "type": "number"
            },
            "scaf_L90": {
               "description": "The L90 statistic is less than or equal to the L50 statistic; it is the length for which the collection of all scaffolds of that length or longer contains at least 90% of the sum of the lengths of all scaffolds.",
               "type": "number"
            },
            "scaf_N50": {
               "description": "Given a set of scaffolds, each with its own length, the N50 count is defined as the smallest number of scaffolds whose length sum makes up half of genome size.",
               "type": "number"
            },
            "scaf_N90": {
               "description": "Given a set of scaffolds, each with its own length, the N90 count is defined as the smallest number of scaffolds whose length sum makes up 90% of genome size.",
               "type": "number"
            },
            "scaf_bp": {
               "description": "Total size in bp of all scaffolds.",
               "type": "number"
            },
            "scaf_l_gt50K": {
               "description": "Total size in bp of all scaffolds greater than 50 KB.",
               "type": "number"
            },
            "scaf_logsum": {
               "description": "The sum of the (length*log(length)) of all scaffolds, times some constant.  Increase the contiguity, the score will increase",
               "type": "number"
            },
            "scaf_max": {
               "description": "Maximum scaffold length.",
               "type": "number"
            },
            "scaf_n_gt50K": {
               "description": "Total sequence count of scaffolds greater than 50 KB.",
               "type": "number"
            },
            "scaf_pct_gt50K": {
               "description": "Total sequence size percentage of scaffolds greater than 50 KB.",
               "type": "number"
            },
            "scaf_powsum": {
               "description": "Powersum of all scaffolds is the same as logsum except that it uses the sum of (length*(length^P)) for some power P (default P=0.25).",
               "type": "number"
            },
            "scaffolds": {
               "description": "Total sequence count of all scaffolds.",
               "type": "number"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "used": {
               "type": "string"
            },
            "was_associated_with": {
               "description": "the agent/entity associated with the generation of the file",
               "type": "string"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "execution_resource",
            "git_url",
            "has_input",
            "has_output",
            "type",
            "started_at_time",
            "ended_at_time",
            "was_informed_by"
         ],
         "title": "MetagenomeAssembly",
         "type": "object"
      },
      "MetaproteomicsAnalysisActivity": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "execution_resource": {
               "description": "Example: NERSC-Cori",
               "type": "string"
            },
            "git_url": {
               "description": "Example: https://github.com/microbiomedata/mg_annotation/releases/tag/0.1",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_peptide_quantifications": {
               "items": {
                  "$ref": "#/$defs/PeptideQuantification"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "used": {
               "description": "The instrument used to collect the data used in the analysis",
               "type": "string"
            },
            "was_associated_with": {
               "description": "the agent/entity associated with the generation of the file",
               "type": "string"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "execution_resource",
            "git_url",
            "has_input",
            "has_output",
            "type",
            "started_at_time",
            "ended_at_time",
            "was_informed_by"
         ],
         "title": "MetaproteomicsAnalysisActivity",
         "type": "object"
      },
      "MetatranscriptomeActivity": {
         "additionalProperties": false,
         "description": "A metatranscriptome activity that e.g. pools assembly and annotation activity.",
         "properties": {
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "execution_resource": {
               "description": "Example: NERSC-Cori",
               "type": "string"
            },
            "git_url": {
               "description": "Example: https://github.com/microbiomedata/mg_annotation/releases/tag/0.1",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "used": {
               "type": "string"
            },
            "was_associated_with": {
               "description": "the agent/entity associated with the generation of the file",
               "type": "string"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "execution_resource",
            "git_url",
            "has_input",
            "has_output",
            "type",
            "started_at_time",
            "ended_at_time",
            "was_informed_by"
         ],
         "title": "MetatranscriptomeActivity",
         "type": "object"
      },
      "MetatranscriptomeAnnotationActivity": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "execution_resource": {
               "description": "Example: NERSC-Cori",
               "type": "string"
            },
            "git_url": {
               "description": "Example: https://github.com/microbiomedata/mg_annotation/releases/tag/0.1",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "used": {
               "type": "string"
            },
            "was_associated_with": {
               "description": "the agent/entity associated with the generation of the file",
               "type": "string"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "execution_resource",
            "git_url",
            "has_input",
            "has_output",
            "type",
            "started_at_time",
            "ended_at_time",
            "was_informed_by"
         ],
         "title": "MetatranscriptomeAnnotationActivity",
         "type": "object"
      },
      "MetatranscriptomeAssembly": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "INSDC_assembly_identifiers": {
               "pattern": "^insdc.sra:[A-Z]+[0-9]+(\\.[0-9]+)?$",
               "type": "string"
            },
            "asm_score": {
               "description": "A score for comparing metagenomic assembly quality from same sample.",
               "type": "number"
            },
            "contig_bp": {
               "description": "Total size in bp of all contigs.",
               "type": "number"
            },
            "contigs": {
               "description": "The sum of the (length*log(length)) of all contigs, times some constant.  Increase the contiguity, the score will increase",
               "type": "number"
            },
            "ctg_L50": {
               "description": "Given a set of contigs, the L50 is defined as the sequence length of the shortest contig at 50% of the total genome length.",
               "type": "number"
            },
            "ctg_L90": {
               "description": "The L90 statistic is less than or equal to the L50 statistic; it is the length for which the collection of all contigs of that length or longer contains at least 90% of the sum of the lengths of all contigs.",
               "type": "number"
            },
            "ctg_N50": {
               "description": "Given a set of contigs, each with its own length, the N50 count is defined as the smallest number of contigs whose length sum makes up half of genome size.",
               "type": "number"
            },
            "ctg_N90": {
               "description": "Given a set of contigs, each with its own length, the N90 count is defined as the smallest number of contigs whose length sum makes up 90% of genome size.",
               "type": "number"
            },
            "ctg_logsum": {
               "description": "Maximum contig length.",
               "type": "number"
            },
            "ctg_max": {
               "description": "Maximum contig length.",
               "type": "number"
            },
            "ctg_powsum": {
               "description": "Powersum of all contigs is the same as logsum except that it uses the sum of (length*(length^P)) for some power P (default P=0.25).",
               "type": "number"
            },
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "execution_resource": {
               "description": "Example: NERSC-Cori",
               "type": "string"
            },
            "gap_pct": {
               "description": "The gap size percentage of all scaffolds.",
               "type": "number"
            },
            "gc_avg": {
               "description": "Average of GC content of all contigs.",
               "type": "number"
            },
            "gc_std": {
               "description": "Standard deviation of GC content of all contigs.",
               "type": "number"
            },
            "git_url": {
               "description": "Example: https://github.com/microbiomedata/mg_annotation/releases/tag/0.1",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "num_aligned_reads": {
               "description": "The sequence count number of input reads aligned to assembled contigs.",
               "type": "number"
            },
            "num_input_reads": {
               "description": "The sequence count number of input reads for assembly.",
               "type": "number"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "scaf_L50": {
               "description": "Given a set of scaffolds, the L50 is defined as the sequence length of the shortest scaffold at 50% of the total genome length.",
               "type": "number"
            },
            "scaf_L90": {
               "description": "The L90 statistic is less than or equal to the L50 statistic; it is the length for which the collection of all scaffolds of that length or longer contains at least 90% of the sum of the lengths of all scaffolds.",
               "type": "number"
            },
            "scaf_N50": {
               "description": "Given a set of scaffolds, each with its own length, the N50 count is defined as the smallest number of scaffolds whose length sum makes up half of genome size.",
               "type": "number"
            },
            "scaf_N90": {
               "description": "Given a set of scaffolds, each with its own length, the N90 count is defined as the smallest number of scaffolds whose length sum makes up 90% of genome size.",
               "type": "number"
            },
            "scaf_bp": {
               "description": "Total size in bp of all scaffolds.",
               "type": "number"
            },
            "scaf_l_gt50K": {
               "description": "Total size in bp of all scaffolds greater than 50 KB.",
               "type": "number"
            },
            "scaf_logsum": {
               "description": "The sum of the (length*log(length)) of all scaffolds, times some constant.  Increase the contiguity, the score will increase",
               "type": "number"
            },
            "scaf_max": {
               "description": "Maximum scaffold length.",
               "type": "number"
            },
            "scaf_n_gt50K": {
               "description": "Total sequence count of scaffolds greater than 50 KB.",
               "type": "number"
            },
            "scaf_pct_gt50K": {
               "description": "Total sequence size percentage of scaffolds greater than 50 KB.",
               "type": "number"
            },
            "scaf_powsum": {
               "description": "Powersum of all scaffolds is the same as logsum except that it uses the sum of (length*(length^P)) for some power P (default P=0.25).",
               "type": "number"
            },
            "scaffolds": {
               "description": "Total sequence count of all scaffolds.",
               "type": "number"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "used": {
               "type": "string"
            },
            "was_associated_with": {
               "description": "the agent/entity associated with the generation of the file",
               "type": "string"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "execution_resource",
            "git_url",
            "has_input",
            "has_output",
            "type",
            "started_at_time",
            "ended_at_time",
            "was_informed_by"
         ],
         "title": "MetatranscriptomeAssembly",
         "type": "object"
      },
      "NomAnalysisActivity": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "execution_resource": {
               "description": "Example: NERSC-Cori",
               "type": "string"
            },
            "git_url": {
               "description": "Example: https://github.com/microbiomedata/mg_annotation/releases/tag/0.1",
               "type": "string"
            },
            "has_calibration": {
               "description": "A reference to a file that holds calibration information.",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "used": {
               "description": "The instrument used to collect the data used in the analysis",
               "type": "string"
            },
            "was_associated_with": {
               "description": "the agent/entity associated with the generation of the file",
               "type": "string"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "execution_resource",
            "git_url",
            "has_input",
            "has_output",
            "type",
            "started_at_time",
            "ended_at_time",
            "was_informed_by"
         ],
         "title": "NomAnalysisActivity",
         "type": "object"
      },
      "OmicsProcessing": {
         "additionalProperties": false,
         "description": "The methods and processes used to generate omics data from a biosample or organism.",
         "properties": {
            "GOLD_sequencing_project_identifiers": {
               "description": "identifiers for corresponding sequencing project in GOLD",
               "items": {
                  "type": "string"
               },
               "pattern": "^GOLD:Gp[0-9]+$",
               "type": "array"
            },
            "INSDC_experiment_identifiers": {
               "items": {
                  "type": "string"
               },
               "pattern": "^insdc.sra:(E|D|S)RX[0-9]{6,}$",
               "type": "array"
            },
            "add_date": {
               "description": "The date on which the information was added to the database.",
               "type": "string"
            },
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "chimera_check": {
               "$ref": "#/$defs/TextValue",
               "description": "A chimeric sequence, or chimera for short, is a sequence comprised of two or more phylogenetically distinct parent sequences. Chimeras are usually PCR artifacts thought to occur when a prematurely terminated amplicon reanneals to a foreign DNA strand and is copied to completion in the following PCR cycles. The point at which the chimeric sequence changes from one parent to the next is called the breakpoint or conversion point"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "instrument_name": {
               "description": "The name of the instrument that was used for processing the sample.\n   ",
               "type": "string"
            },
            "mod_date": {
               "description": "The last date on which the database information was modified.",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "ncbi_project_name": {
               "type": "string"
            },
            "nucl_acid_amp": {
               "$ref": "#/$defs/TextValue",
               "description": "A link to a literature reference, electronic resource or a standard operating procedure (SOP), that describes the enzymatic amplification (PCR, TMA, NASBA) of specific nucleic acids"
            },
            "nucl_acid_ext": {
               "$ref": "#/$defs/TextValue",
               "description": "A link to a literature reference, electronic resource or a standard operating procedure (SOP), that describes the material separation to recover the nucleic acid fraction from a sample"
            },
            "omics_type": {
               "$ref": "#/$defs/ControlledTermValue",
               "description": "The type of omics data"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "pcr_cond": {
               "$ref": "#/$defs/TextValue",
               "description": "Description of reaction conditions and components of PCR in the form of  'initial denaturation:94degC_1.5min; annealing=...'",
               "pattern": "initial denaturation:degrees_minutes;annealing:degrees_minutes;elongation:degrees_minutes;final elongation:degrees_minutes;total cycles"
            },
            "pcr_primers": {
               "$ref": "#/$defs/TextValue",
               "description": "PCR primers that were used to amplify the sequence of the targeted gene, locus or subfragment. This field should contain all the primers used for a single PCR reaction if multiple forward or reverse primers are present in a single PCR reaction. The primer sequence should be reported in uppercase letters"
            },
            "principal_investigator": {
               "$ref": "#/$defs/PersonValue",
               "description": "Principal Investigator who led the study and/or generated the dataset."
            },
            "processing_institution": {
               "description": "The organization that processed the sample.",
               "type": "string"
            },
            "samp_vol_we_dna_ext": {
               "$ref": "#/$defs/QuantityValue",
               "description": "Volume (ml), weight (g) of processed sample, or surface area swabbed from sample for DNA extraction",
               "pattern": "\\d+[.\\d+] \\S+"
            },
            "seq_meth": {
               "$ref": "#/$defs/TextValue",
               "description": "Sequencing method used; e.g. Sanger, pyrosequencing, ABI-solid",
               "pattern": "[MinION|GridION|PromethION|454 GS|454 GS 20|454 GS FLX|454 GS FLX+|454 GS FLX Titanium|454 GS Junior|Illumina Genome Analyzer|Illumina Genome Analyzer II|Illumina Genome Analyzer IIx|Illumina HiSeq 4000|Illumina HiSeq 3000|Illumina HiSeq 2500|Illumina HiSeq 2000|Illumina HiSeq 1500|Illumina HiSeq 1000|Illumina HiScanSQ|Illumina MiSeq|Illumina HiSeq X Five|Illumina HiSeq X Ten|Illumina NextSeq 500|Illumina NextSeq 550|AB SOLiD System|AB SOLiD System 2.0|AB SOLiD System 3.0|AB SOLiD 3 Plus System|AB SOLiD 4 System|AB SOLiD 4hq System|AB SOLiD PI System|AB 5500 Genetic Analyzer|AB 5500xl Genetic Analyzer|AB 5500xl\\-W Genetic Analysis System|Ion Torrent PGM|Ion Torrent Proton|Ion Torrent S5|Ion Torrent S5 XL|PacBio RS|PacBio RS II|Sequel|AB 3730xL Genetic Analyzer|AB 3730 Genetic Analyzer|AB 3500xL Genetic Analyzer|AB 3500 Genetic Analyzer|AB 3130xL Genetic Analyzer|AB 3130 Genetic Analyzer|AB 310 Genetic Analyzer|BGISEQ\\-500]"
            },
            "seq_quality_check": {
               "$ref": "#/$defs/TextValue",
               "description": "Indicate if the sequence has been called by automatic systems (none) or undergone a manual editing procedure (e.g. by inspecting the raw data or chromatograms). Applied only for sequences that are not submitted to SRA,ENA or DRA",
               "pattern": "[none|manually edited]"
            },
            "target_gene": {
               "$ref": "#/$defs/TextValue",
               "description": "Targeted gene or locus name for marker gene studies"
            },
            "target_subfragment": {
               "$ref": "#/$defs/TextValue",
               "description": "Name of subfragment of a gene or locus. Important to e.g. identify special regions on marker genes like V6 on 16S rRNA"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "OmicsProcessing",
         "type": "object"
      },
      "OntologyClass": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "OntologyClass",
         "type": "object"
      },
      "OrthologyGroup": {
         "additionalProperties": false,
         "description": "A set of genes or gene products in which all members are orthologous",
         "properties": {
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "OrthologyGroup",
         "type": "object"
      },
      "Pathway": {
         "additionalProperties": false,
         "description": "A pathway is a sequence of steps/reactions carried out by an organism or community of organisms",
         "properties": {
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "has_part": {
               "description": "A pathway can be broken down to a series of reaction step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "Pathway",
         "type": "object"
      },
      "PeptideQuantification": {
         "additionalProperties": false,
         "description": "This is used to link a metaproteomics analysis workflow to a specific peptide sequence and related information",
         "properties": {
            "all_proteins": {
               "description": "the list of protein identifiers that are associated with the peptide sequence",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "best_protein": {
               "description": "the specific protein identifier most correctly associated with the peptide sequence",
               "type": "string"
            },
            "min_q_value": {
               "description": "smallest Q-Value associated with the peptide sequence as provided by MSGFPlus tool",
               "type": "number"
            },
            "peptide_sequence": {
               "type": "string"
            },
            "peptide_spectral_count": {
               "description": "sum of filter passing MS2 spectra associated with the peptide sequence within a given LC-MS/MS data file",
               "type": "integer"
            },
            "peptide_sum_masic_abundance": {
               "description": "combined MS1 extracted ion chromatograms derived from MS2 spectra associated with the peptide sequence from a given LC-MS/MS data file using the MASIC tool",
               "type": "integer"
            }
         },
         "required": [],
         "title": "PeptideQuantification",
         "type": "object"
      },
      "Person": {
         "additionalProperties": false,
         "description": "represents a person, such as a researcher",
         "properties": {
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "id": {
               "description": "Should be an ORCID. Specify in CURIE format. E.g ORCID:0000-1111-...",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "Person",
         "type": "object"
      },
      "PersonValue": {
         "additionalProperties": false,
         "description": "An attribute value representing a person",
         "properties": {
            "email": {
               "description": "An email address for an entity such as a person. This should be the primarly email address used.",
               "type": "string"
            },
            "has_raw_value": {
               "description": "The full name of the Investgator in format FIRST LAST.",
               "type": "string"
            },
            "name": {
               "description": "The full name of the Investgator. It should follow the format FIRST [MIDDLE NAME| MIDDLE INITIAL] LAST, where MIDDLE NAME| MIDDLE INITIAL is optional.",
               "type": "string"
            },
            "orcid": {
               "description": "The ORICD of a person.",
               "type": "string"
            },
            "profile_image_url": {
               "description": "A url that points to an image of a person.",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specified the type of object.",
               "type": "string"
            },
            "was_generated_by": {
               "type": "string"
            },
            "websites": {
               "description": "A list of websites that are assocatiated with the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [],
         "title": "PersonValue",
         "type": "object"
      },
      "ProteinQuantification": {
         "additionalProperties": false,
         "description": "This is used to link a metaproteomics analysis workflow to a specific protein",
         "properties": {
            "all_proteins": {
               "description": "the grouped list of protein identifiers associated with the peptide sequences that were grouped to a best protein",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "best_protein": {
               "description": "the specific protein identifier most correctly grouped to its associated peptide sequences",
               "type": "string"
            },
            "peptide_sequence_count": {
               "description": "count of peptide sequences grouped to the best_protein",
               "type": "integer"
            },
            "protein_spectral_count": {
               "description": "sum of filter passing MS2 spectra associated with the best protein within a given LC-MS/MS data file",
               "type": "integer"
            },
            "protein_sum_masic_abundance": {
               "description": "combined MS1 extracted ion chromatograms derived from MS2 spectra associated with the best protein from a given LC-MS/MS data file using the MASIC tool",
               "type": "integer"
            }
         },
         "required": [],
         "title": "ProteinQuantification",
         "type": "object"
      },
      "QuantityValue": {
         "additionalProperties": false,
         "description": "A simple quantity, e.g. 2cm",
         "properties": {
            "has_maximum_numeric_value": {
               "description": "The maximum value part, expressed as number, of the quantity value when the value covers a range.",
               "type": "number"
            },
            "has_minimum_numeric_value": {
               "description": "The minimum value part, expressed as number, of the quantity value when the value covers a range.",
               "type": "number"
            },
            "has_numeric_value": {
               "description": "The number part of the quantity",
               "type": "number"
            },
            "has_raw_value": {
               "description": "Unnormalized atomic string representation, should in syntax {number} {unit}",
               "type": "string"
            },
            "has_unit": {
               "description": "The unit of the quantity",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specified the type of object.",
               "type": "string"
            },
            "was_generated_by": {
               "type": "string"
            }
         },
         "required": [],
         "title": "QuantityValue",
         "type": "object"
      },
      "Reaction": {
         "additionalProperties": false,
         "description": "An individual biochemical transformation carried out by a functional unit of an organism, in which a collection of substrates are transformed into a collection of products. Can also represent transporters",
         "properties": {
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "direction": {
               "description": "One of l->r, r->l, bidirectional, neutral",
               "type": "string"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "is_balanced": {
               "type": "boolean"
            },
            "is_diastereoselective": {
               "type": "boolean"
            },
            "is_fully_characterized": {
               "description": "False if includes R-groups",
               "type": "boolean"
            },
            "is_stereo": {
               "type": "boolean"
            },
            "is_transport": {
               "type": "boolean"
            },
            "left_participants": {
               "items": {
                  "$ref": "#/$defs/ReactionParticipant"
               },
               "type": "array"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "right_participants": {
               "items": {
                  "$ref": "#/$defs/ReactionParticipant"
               },
               "type": "array"
            },
            "smarts_string": {
               "type": "string"
            }
         },
         "required": [
            "id"
         ],
         "title": "Reaction",
         "type": "object"
      },
      "ReactionParticipant": {
         "additionalProperties": false,
         "description": "Instances of this link a reaction to a chemical entity participant",
         "properties": {
            "chemical": {
               "type": "string"
            },
            "stoichiometry": {
               "type": "integer"
            }
         },
         "required": [],
         "title": "ReactionParticipant",
         "type": "object"
      },
      "ReadBasedAnalysisActivity": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "execution_resource": {
               "description": "Example: NERSC-Cori",
               "type": "string"
            },
            "git_url": {
               "description": "Example: https://github.com/microbiomedata/mg_annotation/releases/tag/0.1",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "used": {
               "type": "string"
            },
            "was_associated_with": {
               "description": "the agent/entity associated with the generation of the file",
               "type": "string"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "execution_resource",
            "git_url",
            "has_input",
            "has_output",
            "type",
            "started_at_time",
            "ended_at_time",
            "was_informed_by"
         ],
         "title": "ReadBasedAnalysisActivity",
         "type": "object"
      },
      "ReadQCAnalysisActivity": {
         "additionalProperties": false,
         "description": "",
         "properties": {
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "execution_resource": {
               "description": "Example: NERSC-Cori",
               "type": "string"
            },
            "git_url": {
               "description": "Example: https://github.com/microbiomedata/mg_annotation/releases/tag/0.1",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "input_base_count": {
               "description": "The nucleotide base count number of input reads for QC analysis.",
               "type": "number"
            },
            "input_read_bases": {
               "description": "TODO",
               "type": "number"
            },
            "input_read_count": {
               "description": "The sequence count number of input reads for QC analysis.",
               "type": "number"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "output_base_count": {
               "description": "After QC analysis nucleotide base count number.",
               "type": "number"
            },
            "output_read_bases": {
               "description": "TODO",
               "type": "number"
            },
            "output_read_count": {
               "description": "After QC analysis sequence count number. ",
               "type": "number"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "used": {
               "type": "string"
            },
            "was_associated_with": {
               "description": "the agent/entity associated with the generation of the file",
               "type": "string"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "execution_resource",
            "git_url",
            "type",
            "started_at_time",
            "ended_at_time",
            "was_informed_by",
            "has_input",
            "has_output"
         ],
         "title": "ReadQCAnalysisActivity",
         "type": "object"
      },
      "Study": {
         "additionalProperties": false,
         "description": "A study summarizes the overall goal of a research initiative and outlines the key objective of its underlying projects.",
         "properties": {
            "GOLD_study_identifiers": {
               "description": "identifiers for corresponding project in GOLD",
               "items": {
                  "type": "string"
               },
               "pattern": "^GOLD:Gs[0-9]+$",
               "type": "array"
            },
            "INSDC_SRA_ENA_study_identifiers": {
               "description": "identifiers for corresponding project in INSDC SRA / ENA",
               "items": {
                  "type": "string"
               },
               "pattern": "^insdc.sra:(E|D|S)RP[0-9]{6,}$",
               "type": "array"
            },
            "INSDC_bioproject_identifiers": {
               "description": "identifiers for corresponding project in INSDC Bioproject",
               "items": {
                  "type": "string"
               },
               "pattern": "^bioproject:PRJ[DEN][A-Z][0-9]+$",
               "type": "array"
            },
            "MGnify_project_identifiers": {
               "description": "identifiers for corresponding project in MGnify",
               "items": {
                  "type": "string"
               },
               "pattern": "^mgnify.proj:[A-Z]+[0-9]+$",
               "type": "array"
            },
            "abstract": {
               "description": "The abstract of manuscript/grant associated with the entity; i.e., a summary of the resource.",
               "type": "string"
            },
            "alternative_descriptions": {
               "description": "A list of alternative descriptions for the entity. The distinction between desciption and alternative descriptions is application-specific.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "alternative_identifiers": {
               "description": "A list of alternative identifiers for the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "alternative_names": {
               "description": "A list of alternative names used to refer to the entity. The distinction between name and alternative names is application-specific.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "alternative_titles": {
               "description": "A list of alternative titles for the entity. The distinction between title and alternative titles is application-specific.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "description": {
               "description": "a human-readable description of a thing",
               "type": "string"
            },
            "doi": {
               "$ref": "#/$defs/AttributeValue",
               "description": "The dataset citation for this study"
            },
            "ecosystem": {
               "description": "An ecosystem is a combination of a physical environment (abiotic factors) and all the organisms (biotic factors) that interact with this environment. Ecosystem is in position 1/5 in a GOLD path.",
               "type": "string"
            },
            "ecosystem_category": {
               "description": "Ecosystem categories represent divisions within the ecosystem based on specific characteristics of the environment from where an organism or sample is isolated. Ecosystem category is in position 2/5 in a GOLD path.",
               "type": "string"
            },
            "ecosystem_subtype": {
               "description": "Ecosystem subtypes represent further subdivision of Ecosystem types into more distinct subtypes. Ecosystem subtype is in position 4/5 in a GOLD path.",
               "type": "string"
            },
            "ecosystem_type": {
               "description": "Ecosystem types represent things having common characteristics within the Ecosystem Category. These common characteristics based grouping is still broad but specific to the characteristics of a given environment. Ecosystem type is in position 3/5 in a GOLD path.",
               "type": "string"
            },
            "ess_dive_datasets": {
               "description": "List of ESS-DIVE dataset DOIs",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "funding_sources": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_credit_associations": {
               "description": "This slot links a study to a credit association.  The credit association will be linked to a person value and to a CRediT Contributor Roles term. Overall semantics: person should get credit X for their participation in the study",
               "items": {
                  "$ref": "#/$defs/CreditAssociation"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "objective": {
               "description": "The scientific objectives associated with the entity. It SHOULD correspond to scientific norms for objectives field in a structured abstract.",
               "type": "string"
            },
            "principal_investigator": {
               "$ref": "#/$defs/PersonValue",
               "description": "Principal Investigator who led the study and/or generated the dataset."
            },
            "publications": {
               "description": "A list of publications that are assocatiated with the entity. The publicatons SHOULD be given using an identifier, such as a DOI or Pubmed ID, if possible.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "relevant_protocols": {
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "specific_ecosystem": {
               "description": "Specific ecosystems represent specific features of the environment like aphotic zone in an ocean or gastric mucosa within a host digestive system. Specific ecosystem is in position 5/5 in a GOLD path.",
               "type": "string"
            },
            "study_image": {
               "description": "Links a study to one or more images.",
               "items": {
                  "$ref": "#/$defs/ImageValue"
               },
               "type": "array"
            },
            "title": {
               "description": "A name given to the entity that differs from the name/label programatically assigned to it. For example, when extracting study information for GOLD, the GOLD system has assigned a name/label. However, for display purposes, we may also wish the capture the title of the proposal that was used to fund the study.",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "websites": {
               "description": "A list of websites that are assocatiated with the entity.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            }
         },
         "required": [
            "id"
         ],
         "title": "Study",
         "type": "object"
      },
      "TextValue": {
         "additionalProperties": false,
         "description": "A basic string value",
         "properties": {
            "has_raw_value": {
               "description": "The value that was specified for an annotation in raw form, i.e. a string. E.g. \"2 cm\" or \"2-4 cm\"",
               "type": "string"
            },
            "language": {
               "description": "Should use ISO 639-1 code e.g. \"en\", \"fr\"",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specified the type of object.",
               "type": "string"
            },
            "was_generated_by": {
               "type": "string"
            }
         },
         "required": [],
         "title": "TextValue",
         "type": "object"
      },
      "TimestampValue": {
         "additionalProperties": false,
         "description": "A value that is a timestamp. The range should be ISO-8601",
         "properties": {
            "has_raw_value": {
               "description": "The value that was specified for an annotation in raw form, i.e. a string. E.g. \"2 cm\" or \"2-4 cm\"",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specified the type of object.",
               "type": "string"
            },
            "was_generated_by": {
               "type": "string"
            }
         },
         "required": [],
         "title": "TimestampValue",
         "type": "object"
      },
      "UrlValue": {
         "additionalProperties": false,
         "description": "A value that is a string that conforms to URL syntax",
         "properties": {
            "has_raw_value": {
               "description": "The value that was specified for an annotation in raw form, i.e. a string. E.g. \"2 cm\" or \"2-4 cm\"",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specified the type of object.",
               "type": "string"
            },
            "was_generated_by": {
               "type": "string"
            }
         },
         "required": [],
         "title": "UrlValue",
         "type": "object"
      },
      "WorkflowExecutionActivity": {
         "additionalProperties": false,
         "description": "Represents an instance of an execution of a particular workflow",
         "properties": {
            "ended_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "execution_resource": {
               "description": "Example: NERSC-Cori",
               "type": "string"
            },
            "git_url": {
               "description": "Example: https://github.com/microbiomedata/mg_annotation/releases/tag/0.1",
               "type": "string"
            },
            "has_input": {
               "description": "An input to a process.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "has_output": {
               "description": "An output biosample to a processing step",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "id": {
               "description": "A unique identifier for a thing. Must be either a CURIE shorthand for a URI or a complete URI",
               "type": "string"
            },
            "name": {
               "description": "A human readable label for an entity",
               "type": "string"
            },
            "part_of": {
               "description": "Links a resource to another resource that either logically or physically includes it.",
               "items": {
                  "type": "string"
               },
               "type": "array"
            },
            "started_at_time": {
               "format": "date-time",
               "pattern": "^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24\\:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$",
               "type": "string"
            },
            "type": {
               "description": "An optional string that specifies the type object.  This is used to allow for searches for different kinds of objects.",
               "type": "string"
            },
            "used": {
               "type": "string"
            },
            "was_associated_with": {
               "description": "the agent/entity associated with the generation of the file",
               "type": "string"
            },
            "was_informed_by": {
               "type": "string"
            }
         },
         "required": [
            "id",
            "execution_resource",
            "git_url",
            "has_input",
            "has_output",
            "type",
            "started_at_time",
            "ended_at_time",
            "was_informed_by"
         ],
         "title": "WorkflowExecutionActivity",
         "type": "object"
      }
   },
   "$id": "https://microbiomedata/schema",
   "$schema": "http://json-schema.org/draft-07/schema#",
   "additionalProperties": false,
   "metamodel_version": "1.7.0",
   "properties": {
      "activity_set": {
         "description": "This property links a database object to the set of workflow activities.",
         "items": {
            "$ref": "#/$defs/WorkflowExecutionActivity"
         },
         "type": "array"
      },
      "biosample_set": {
         "description": "This property links a database object to the set of samples within it.",
         "items": {
            "$ref": "#/$defs/Biosample"
         },
         "type": "array"
      },
      "data_object_set": {
         "description": "This property links a database object to the set of data objects within it.",
         "items": {
            "$ref": "#/$defs/DataObject"
         },
         "type": "array"
      },
      "date_created": {
         "description": "TODO",
         "type": "string"
      },
      "etl_software_version": {
         "description": "TODO",
         "type": "string"
      },
      "functional_annotation_set": {
         "description": "This property links a database object to the set of all functional annotations",
         "items": {
            "$ref": "#/$defs/FunctionalAnnotation"
         },
         "type": "array"
      },
      "genome_feature_set": {
         "description": "This property links a database object to the set of all features",
         "items": {
            "$ref": "#/$defs/GenomeFeature"
         },
         "type": "array"
      },
      "mags_activity_set": {
         "description": "This property links a database object to the set of MAGs analysis activities.",
         "items": {
            "$ref": "#/$defs/MAGsAnalysisActivity"
         },
         "type": "array"
      },
      "metabolomics_analysis_activity_set": {
         "description": "This property links a database object to the set of metabolomics analysis activities.",
         "items": {
            "$ref": "#/$defs/MetabolomicsAnalysisActivity"
         },
         "type": "array"
      },
      "metagenome_annotation_activity_set": {
         "description": "This property links a database object to the set of metagenome annotation activities.",
         "items": {
            "$ref": "#/$defs/MetagenomeAnnotationActivity"
         },
         "type": "array"
      },
      "metagenome_assembly_set": {
         "description": "This property links a database object to the set of metagenome assembly activities.",
         "items": {
            "$ref": "#/$defs/MetagenomeAssembly"
         },
         "type": "array"
      },
      "metaproteomics_analysis_activity_set": {
         "description": "This property links a database object to the set of metaproteomics analysis activities.",
         "items": {
            "$ref": "#/$defs/MetaproteomicsAnalysisActivity"
         },
         "type": "array"
      },
      "metatranscriptome_activity_set": {
         "description": "This property links a database object to the set of metatranscriptome analysis activities.",
         "items": {
            "$ref": "#/$defs/MetatranscriptomeActivity"
         },
         "type": "array"
      },
      "nmdc_schema_version": {
         "description": "TODO",
         "type": "string"
      },
      "nom_analysis_activity_set": {
         "description": "This property links a database object to the set of natural organic matter (NOM) analysis activities.",
         "items": {
            "$ref": "#/$defs/NomAnalysisActivity"
         },
         "type": "array"
      },
      "omics_processing_set": {
         "description": "This property links a database object to the set of omics processings within it.",
         "items": {
            "$ref": "#/$defs/OmicsProcessing"
         },
         "type": "array"
      },
      "read_QC_analysis_activity_set": {
         "description": "This property links a database object to the set of read QC analysis activities.",
         "items": {
            "$ref": "#/$defs/ReadQCAnalysisActivity"
         },
         "type": "array"
      },
      "read_based_analysis_activity_set": {
         "description": "This property links a database object to the set of read based analysis activities.\n  ",
         "items": {
            "$ref": "#/$defs/ReadBasedAnalysisActivity"
         },
         "type": "array"
      },
      "study_set": {
         "description": "This property links a database object to the set of studies within it.",
         "items": {
            "$ref": "#/$defs/Study"
         },
         "type": "array"
      }
   },
   "required": [],
   "title": "NMDC",
   "type": "object",
   "version": "2.1.0"
}

