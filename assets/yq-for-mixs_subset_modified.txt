'.slots.env_broad_scale.is_a |= "mixs_env_triad_field"'
'.slots.env_local_scale.is_a |= "mixs_env_triad_field"'
'.slots.env_medium.is_a |= "mixs_env_triad_field"'

'.slots.agrochem_addition.range |= "TextValue"'
'.slots.air_temp_regm.range |= "TextValue"'
'.slots.antibiotic_regm.range |= "TextValue"'
'.slots.aromatics_pc.range |= "TextValue"'
'.slots.asphaltenes_pc.range |= "TextValue"'
'.slots.atmospheric_data.range |= "TextValue"'
'.slots.avg_occup.range |= "TextValue"'
'.slots.bathroom_count.range |= "TextValue"'
'.slots.bedroom_count.range |= "TextValue"'
'.slots.biocide_admin_method.range |= "TextValue"'
'.slots.biomass.range |= "TextValue"'
'.slots.chem_administration.range |= "ControlledTermValue"'
'.slots.chem_mutagen.range |= "TextValue"'
'.slots.chem_treat_method.range |= "string"'
'.slots.collection_date.range |= "TimestampValue"'
'.slots.cool_syst_id.range |= "TextValue"'
'.slots.date_last_rain.range |= "TimestampValue"'
'.slots.diether_lipids.range |= "TextValue"'
'.slots.elevator.range |= "TextValue"'
'.slots.emulsions.range |= "TextValue"'
'.slots.env_broad_scale.range |= "ControlledIdentifiedTermValue"'
'.slots.env_local_scale.range |= "ControlledIdentifiedTermValue"'
'.slots.env_medium.range |= "ControlledIdentifiedTermValue"' 
'.slots.escalator.range |= "TextValue"'
'.slots.exp_pipe.range |= "QuantityValue"'
'.slots.experimental_factor.range |= "ControlledTermValue"'
'.slots.ext_door.range |= "TextValue"'
'.slots.extreme_event.range |= "TimestampValue"'
'.slots.fertilizer_regm.range |= "TextValue"'
'.slots.fire.range |= "TimestampValue"'
'.slots.flooding.range |= "TimestampValue"'
'.slots.floor_count.range |= "TextValue"'
'.slots.freq_clean.range |= "QuantityValue"'
'.slots.freq_cook.range |= "QuantityValue"'
'.slots.fungicide_regm.range |= "TextValue"'
'.slots.gaseous_environment.range |= "TextValue"'
'.slots.gaseous_substances.range |= "TextValue"'
'.slots.gravity.range |= "TextValue"'
'.slots.growth_facil.range |= "ControlledTermValue"'
'.slots.growth_hormone_regm.range |= "TextValue"'
'.slots.hall_count.range |= "TextValue"'
'.slots.hall_count.range |= "TextValue"'
'.slots.hcr_pressure.range |= "TextValue"'
'.slots.hcr_temp.range |= "TextValue"'
'.slots.heat_sys_deliv_meth.range |= "string"'
'.slots.heat_system_id.range |= "TextValue"'
'.slots.heavy_metals.range |= "TextValue"'
'.slots.herbicide_regm.range |= "TextValue"'
'.slots.host_body_product.range |= "ControlledTermValue"'
'.slots.host_body_site.range |= "ControlledTermValue"'
'.slots.host_family_relation.range |= "string"'
'.slots.host_phenotype.range |= "ControlledTermValue"'
'.slots.host_subspecf_genlin.range |= "string"'
'.slots.host_symbiont.range |= "string"'
'.slots.humidity_regm.range |= "TextValue"'
'.slots.inorg_particles.range |= "TextValue"'
'.slots.iw_bt_date_well.range |= "TimestampValue"'
'.slots.last_clean.range |= "TimestampValue"'
'.slots.lat_lon.range |= "GeolocationValue"'
'.slots.light_regm.range |= "TextValue"'
'.slots.max_occup.range |= "QuantityValue"'
'.slots.micro_biomass_meth.range |= "string"'
'.slots.mineral_nutr_regm.range |= "TextValue"'
'.slots.misc_param.description |= "Structured miscellaneous property assertions. Use when a value cannot cleanly fit an existing, policy-governed slot."'
'.slots.misc_param.range |= "PropertyAssertion"'
'.slots.misc_param.multivalued |= true'
'.slots.misc_param.todos += ["This slot should not be available in the submission portal."]'
'.slots.n_alkanes.range |= "TextValue"'
'.slots.non_min_nutr_regm.range |= "string"'
'.slots.number_pets.range |= "QuantityValue"'
'.slots.number_plants.range |= "QuantityValue"'
'.slots.number_resident.range |= "QuantityValue"'
'.slots.occup_density_samp.range |= "QuantityValue"'
'.slots.occup_samp.range |= "QuantityValue"'
'.slots.org_count_qpcr_info.range |= "string"'
'.slots.org_particles.range |= "TextValue"'
'.slots.organism_count.range |= "QuantityValue"'
'.slots.particle_class.range |= "TextValue"'
'.slots.permeability.range |= "TextValue"'
'.slots.pesticide_regm.range |= "TextValue"'
'.slots.phaeopigments.range |= "TextValue"'
'.slots.phosplipid_fatt_acid.range |= "TextValue"'
'.slots.plant_growth_med.range |= "ControlledTermValue"'
'.slots.plant_struc.range |= "ControlledTermValue"'
'.slots.pollutants.range |= "TextValue"'
'.slots.porosity.range |= "TextValue"'
'.slots.pres_animal_insect.range |= "string"'
'.slots.prev_land_use_meth.range |= "string"'
'.slots.prod_start_date.range |= "TimestampValue"'
'.slots.radiation_regm.range |= "TextValue"'
'.slots.rainfall_regm.range |= "TextValue"'
'.slots.resins_pc.range |= "TextValue"'
'.slots.room_architec_elem.range |= "string"'
'.slots.room_count.range |= "TextValue"'
'.slots.room_dim.range |= "TextValue"'
'.slots.room_door_dist.range |= "TextValue"'
'.slots.room_net_area.range |= "TextValue"'
'.slots.room_occup.range |= "QuantityValue"'
'.slots.room_vol.range |= "TextValue"'
'.slots.root_med_carbon.range |= "TextValue"'
'.slots.root_med_macronutr.range |= "TextValue"'
'.slots.root_med_micronutr.range |= "TextValue"'
'.slots.root_med_ph.range |= "QuantityValue"'
'.slots.root_med_regl.range |= "TextValue"'
'.slots.root_med_suppl.range |= "TextValue"'
'.slots.salt_regm.range |= "TextValue"'
'.slots.samp_collec_device.range |= "string"'
'.slots.samp_collec_method.range |= "string"'
'.slots.samp_loc_corr_rate.range |= "TextValue"'
'.slots.samp_mat_process.range |= "ControlledTermValue"'
'.slots.samp_md.range |= "QuantityValue"'
'.slots.samp_name.range |= "string"'
'.slots.samp_preserv.range |= "TextValue"'
'.slots.samp_room_id.range |= "TextValue"'
'.slots.samp_time_out.range |= "TextValue"'
'.slots.samp_transport_cond.range |= "TextValue"'
'.slots.samp_tvdss.range |= "TextValue"'
'.slots.saturates_pc.range |= "TextValue"'
'.slots.shad_dev_water_mold.range |= "string"'
'.slots.sieving.range |= "TextValue"'
'.slots.size_frac.range |= "TextValue"'
'.slots.soil_texture_meth.range |= "string"'
'.slots.soluble_inorg_mat.range |= "TextValue"'
'.slots.soluble_org_mat.range |= "TextValue"'
'.slots.suspend_solids.range |= "TextValue"'
'.slots.tot_nitro_cont_meth.range |= "string"'
'.slots.viscosity.range |= "TextValue"'
'.slots.volatile_org_comp.range |= "TextValue"'
'.slots.water_cont_soil_meth.range |= "string"'
'.slots.water_temp_regm.range |= "TextValue"'
'.slots.watering_regm.range |= "TextValue"'
'.slots.window_open_freq.range |= "TextValue"'
'.slots.window_size.range |= "TextValue"'

'.slots.agrochem_addition.inlined_as_list |= true'
'.slots.air_PM_concen.inlined_as_list |= true'
'.slots.air_temp_regm.inlined_as_list |= true'
'.slots.antibiotic_regm.inlined_as_list |= true'
'.slots.atmospheric_data.inlined_as_list |= true'
'.slots.biomass.inlined_as_list |= true'
'.slots.chem_administration.inlined_as_list |= true'
'.slots.chem_mutagen.inlined_as_list |= true'
'.slots.climate_environment.inlined_as_list |= true'
'.slots.diether_lipids.inlined_as_list |= true'
'.slots.emulsions.inlined_as_list |= true'
'.slots.fertilizer_regm.inlined_as_list |= true'
'.slots.fungicide_regm.inlined_as_list |= true'
'.slots.gaseous_environment.inlined_as_list |= true'
'.slots.gaseous_substances.inlined_as_list |= true'
'.slots.gravity.inlined_as_list |= true'
'.slots.growth_hormone_regm.inlined_as_list |= true'
'.slots.heavy_metals.inlined_as_list |= true'
'.slots.heavy_metals_meth.inlined_as_list |= true'
'.slots.herbicide_regm.inlined_as_list |= true'
'.slots.host_diet.inlined_as_list |= true'
'.slots.host_last_meal.inlined_as_list |= true'
'.slots.humidity_regm.inlined_as_list |= true'
'.slots.inorg_particles.inlined_as_list |= true'
'.slots.mechanical_damage.inlined_as_list |= true'
'.slots.mineral_nutr_regm.inlined_as_list |= true'
'.slots.misc_param.inlined_as_list |= true'
'.slots.n_alkanes.inlined_as_list |= true'
'.slots.org_particles.inlined_as_list |= true'
'.slots.organism_count.inlined_as_list |= true'
'.slots.particle_class.inlined_as_list |= true'
'.slots.perturbation.inlined_as_list |= true'
'.slots.pesticide_regm.inlined_as_list |= true'
'.slots.ph_regm.inlined_as_list |= true'
'.slots.phaeopigments.inlined_as_list |= true'
'.slots.phosplipid_fatt_acid.inlined_as_list |= true'
'.slots.pollutants.inlined_as_list |= true'
'.slots.radiation_regm.inlined_as_list |= true'
'.slots.rainfall_regm.inlined_as_list |= true'
'.slots.salt_regm.inlined_as_list |= true'
'.slots.samp_sort_meth.inlined_as_list |= true'
'.slots.season_environment.inlined_as_list |= true'
'.slots.soluble_inorg_mat.inlined_as_list |= true'
'.slots.soluble_org_mat.inlined_as_list |= true'
'.slots.standing_water_regm.inlined_as_list |= true'
'.slots.suspend_solids.inlined_as_list |= true'
'.slots.volatile_org_comp.inlined_as_list |= true'
'.slots.water_temp_regm.inlined_as_list |= true'
'.slots.watering_regm.inlined_as_list |= true'

'del(.subsets)'
'del(.classes)'
'del(.enums.[].name)' 
'del(.enums.[].permissible_values.[].text)' 
'del(.slots.[].name)'
'del(.slots.[].domain_of)'
'del(.slots.add_recov_method.pattern)' 
'del(.subsets.[].name)' 

'.id |= "https://raw.githubusercontent.com/microbiomedata/nmdc-schema/main/src/schema/mixs.yaml"'

# update host_taxid and samp_taxon_id. may want to flatten to a string or URIORCURIE eventually
'del(.slots.host_taxid.examples)' 
'del(.slots.host_taxid.string_serialization)' 
'del(.slots.samp_taxon_id.examples)' 
'del(.slots.samp_taxon_id.string_serialization)' 

'.slots.host_taxid.comments |= ["Homo sapiens [NCBITaxon:9606] would be a reasonable has_raw_value"]' 
'.slots.host_taxid.range = "ControlledIdentifiedTermValue"' 
'.slots.samp_taxon_id.comments |= ["coal metagenome [NCBITaxon:1260732] would be a reasonable has_raw_value"]' 
'.slots.samp_taxon_id.range = "ControlledIdentifiedTermValue"'

# these slots, by their old names, are not used anywhere in mixs.yaml and seem to confuse the mkdocs search when looking for has_unit etc.
'del(.slots.["has numeric value"])'
'del(.slots.["has raw value"])'
'del(.slots.["has unit"])'

# add "M horizon" to soil_horizon_enum
'.enums.soil_horizon_enum.permissible_values.["M horizon"] = {}'

# replace host_sex_enum permissible values
'del(.enums.host_sex_enum.permissible_values)'
'.enums.host_sex_enum.permissible_values.["female"] = {}'
'.enums.host_sex_enum.permissible_values.["hermaphrodite"] = {}'
'.enums.host_sex_enum.permissible_values.["non-binary"] = {}'
'.enums.host_sex_enum.permissible_values.["male"] = {}'
'.enums.host_sex_enum.permissible_values.["transgender"] = {}'
'.enums.host_sex_enum.permissible_values.["transgender (female to male)"] = {}'
'.enums.host_sex_enum.permissible_values.["transgender (male to female)"] = {}'
'.enums.host_sex_enum.permissible_values.["undeclared"] = {}'

# Fix a few examples so that they are validatable
'del(.slots.env_broad_scale.examples)'
'.slots.env_broad_scale.examples.[0].value = "oceanic epipelagic zone biome [ENVO:01000035]"'

'del(.slots.env_local_scale.examples)'
'.slots.env_local_scale.examples.[0].value = "litter layer [ENVO:01000338]"'

'del(.slots.env_medium.examples)'
'.slots.env_medium.examples.[0].value = "soil [ENVO:00001998]"'

'del(.slots.host_body_product.examples)'
'.slots.host_body_product.examples.[0].value = "mucus [UBERON:0000912]"'

# as of 2024-01-30:
# ValueError: Conflicting URIs (https://raw.githubusercontent.com/microbiomedata/nmdc-schema/main/src/schema/mixs.yaml, https://w3id.org/linkml/types) for item: date
make: *** [Makefile:102: gen-project] Error 1
'del(.types)'

'.imports += ["attribute_values"]'
'.slots.elev.range |= "float"'
'.slots.extreme_event.range |= "string"'
'.slots.fire.range |= "string"'
'.slots.flooding.range |= "string"'
'.slots.water_content.range |= "string"'

# scared to modify https://raw.githubusercontent.com/microbiomedata/mixs/pre-2024-05-15/model/schema/mixs.yaml
# issue https://github.com/microbiomedata/nmdc-schema/issues/2472
# see also https://github.com/microbiomedata/nmdc-schema/issues/1368
'del(.prefixes.MIXS_yaml)'

# Add storage_units annotations for slots with single UCUM-compatible preferred units
'.slots.bromide.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]"}'
'.slots.bromide.examples = [{"value": "0.05 [ppm]"}]'
'.slots.al_sat.annotations.storage_units = {"tag": "storage_units", "value": "%"}'
'.slots.indust_eff_percent.annotations.storage_units = {"tag": "storage_units", "value": "%"}'
'.slots.iwf.annotations.storage_units = {"tag": "storage_units", "value": "%"}'
'.slots.rel_air_humidity.annotations.storage_units = {"tag": "storage_units", "value": "%"}'
'.slots.slope_gradient.annotations.storage_units = {"tag": "storage_units", "value": "%"}'
'.slots.surf_humidity.annotations.storage_units = {"tag": "storage_units", "value": "%"}'
'.slots.water_cut.annotations.storage_units = {"tag": "storage_units", "value": "%"}'
'.slots.built_struc_age.annotations.storage_units = {"tag": "storage_units", "value": "a"}'
'.slots.built_struc_age.examples = [{"value": "15 a"}]'
'.slots.pressure.annotations.storage_units = {"tag": "storage_units", "value": "atm"}'
'.slots.pressure.examples = [{"value": "50 atm"}]'
'.slots.air_temp.annotations.storage_units = {"tag": "storage_units", "value": "Cel"}'
'.slots.air_temp.examples = [{"value": "20 Cel"}]'
'.slots.annual_temp.annotations.storage_units = {"tag": "storage_units", "value": "Cel"}'
'.slots.annual_temp.examples = [{"value": "12.5 Cel"}]'
'.slots.avg_dew_point.annotations.storage_units = {"tag": "storage_units", "value": "Cel"}'
'.slots.avg_dew_point.examples = [{"value": "25.5 Cel"}]'
'.slots.avg_temp.annotations.storage_units = {"tag": "storage_units", "value": "Cel"}'
'.slots.avg_temp.examples = [{"value": "12.5 Cel"}]'
'.slots.dew_point.annotations.storage_units = {"tag": "storage_units", "value": "Cel"}'
'.slots.dew_point.examples = [{"value": "22 Cel"}]'
'.slots.host_body_temp.annotations.storage_units = {"tag": "storage_units", "value": "Cel"}'
'.slots.host_body_temp.examples = [{"value": "15 Cel"}]'
'.slots.pour_point.annotations.storage_units = {"tag": "storage_units", "value": "Cel"}'
'.slots.samp_store_temp.annotations.storage_units = {"tag": "storage_units", "value": "Cel"}'
'.slots.samp_store_temp.examples = [{"value": "-80 Cel"}]'
'.slots.season_temp.annotations.storage_units = {"tag": "storage_units", "value": "Cel"}'
'.slots.season_temp.examples = [{"value": "18 Cel"}]'
'.slots.surf_temp.annotations.storage_units = {"tag": "storage_units", "value": "Cel"}'
'.slots.surf_temp.examples = [{"value": "15 Cel"}]'
'.slots.temp.annotations.storage_units = {"tag": "storage_units", "value": "Cel"}'
'.slots.temp.examples = [{"value": "25 Cel"}]'
'.slots.temp_out.annotations.storage_units = {"tag": "storage_units", "value": "Cel"}'
'.slots.temp_out.examples = [{"value": "5 Cel"}]'
'.slots.height_carper_fiber.annotations.storage_units = {"tag": "storage_units", "value": "cm"}'
'.slots.wall_height.annotations.storage_units = {"tag": "storage_units", "value": "cm"}'
'.slots.slope_aspect.annotations.storage_units = {"tag": "storage_units", "value": "deg"}'
'.slots.slope_aspect.examples = [{"value": "35 deg"}]'
'.slots.sludge_retent_time.annotations.storage_units = {"tag": "storage_units", "value": "h"}'
'.slots.room_air_exch_rate.annotations.storage_units = {"tag": "storage_units", "value": "L/h"}'
'.slots.light_intensity.annotations.storage_units = {"tag": "storage_units", "value": "lx"}'
'.slots.light_intensity.examples = [{"value": "0.3 lx"}]'
'.slots.owc_tvdss.annotations.storage_units = {"tag": "storage_units", "value": "m"}'
'.slots.samp_md.annotations.storage_units = {"tag": "storage_units", "value": "m"}'
'.slots.samp_md.examples = [{"value": "1534 m"}]'
'.slots.tot_depth_water_col.annotations.storage_units = {"tag": "storage_units", "value": "m"}'
'.slots.tot_depth_water_col.examples = [{"value": "500 m"}]'
'.slots.tvdss_of_hcr_press.annotations.storage_units = {"tag": "storage_units", "value": "m"}'
'.slots.mean_frict_vel.annotations.storage_units = {"tag": "storage_units", "value": "m/s"}'
'.slots.mean_frict_vel.examples = [{"value": "0.5 m/s"}]'
'.slots.mean_peak_frict_vel.annotations.storage_units = {"tag": "storage_units", "value": "m/s"}'
'.slots.mean_peak_frict_vel.examples = [{"value": "1 m/s"}]'
'.slots.ceil_area.annotations.storage_units = {"tag": "storage_units", "value": "m2"}'
'.slots.ceil_area.examples = [{"value": "25 m2"}]'
'.slots.door_size.annotations.storage_units = {"tag": "storage_units", "value": "m2"}'
'.slots.door_size.examples = [{"value": "2.5 m2"}]'
'.slots.exp_duct.annotations.storage_units = {"tag": "storage_units", "value": "m2"}'
'.slots.floor_area.annotations.storage_units = {"tag": "storage_units", "value": "m2"}'
'.slots.wall_area.annotations.storage_units = {"tag": "storage_units", "value": "m2"}'
'.slots.water_feat_size.annotations.storage_units = {"tag": "storage_units", "value": "m2"}'
'.slots.prod_rate.annotations.storage_units = {"tag": "storage_units", "value": "m3/d"}'
'.slots.water_prod_rate.annotations.storage_units = {"tag": "storage_units", "value": "m3/d"}'
'.slots.barometric_press.annotations.storage_units = {"tag": "storage_units", "value": "mbar"}'
'.slots.barometric_press.examples = [{"value": "1013 mbar"}]'
'.slots.bac_prod.annotations.storage_units = {"tag": "storage_units", "value": "mg/m3/d"}'
'.slots.bac_prod.examples = [{"value": "5 mg/m3/d"}]'
'.slots.biochem_oxygen_dem.annotations.storage_units = {"tag": "storage_units", "value": "mg/L"}'
'.slots.chem_oxygen_dem.annotations.storage_units = {"tag": "storage_units", "value": "mg/L"}'
'.slots.diss_iron.annotations.storage_units = {"tag": "storage_units", "value": "mg/L"}'
'.slots.hcr_fw_salinity.annotations.storage_units = {"tag": "storage_units", "value": "mg/L"}'
'.slots.sulfate_fw.annotations.storage_units = {"tag": "storage_units", "value": "mg/L"}'
'.slots.suspend_part_matter.annotations.storage_units = {"tag": "storage_units", "value": "mg/L"}'
'.slots.suspend_part_matter.examples = [{"value": "0.5 mg/L"}]'
'.slots.tan.annotations.storage_units = {"tag": "storage_units", "value": "mg/L"}'
'.slots.vfa_fw.annotations.storage_units = {"tag": "storage_units", "value": "mg/L"}'
'.slots.annual_precpt.annotations.storage_units = {"tag": "storage_units", "value": "mm"}'
'.slots.annual_precpt.examples = [{"value": "225 mm"}]'
'.slots.season_precpt.annotations.storage_units = {"tag": "storage_units", "value": "mm"}'
'.slots.season_precpt.examples = [{"value": "10 mm"}]'
'.slots.blood_press_diast.annotations.storage_units = {"tag": "storage_units", "value": "mm[Hg]"}'
'.slots.blood_press_syst.annotations.storage_units = {"tag": "storage_units", "value": "mm[Hg]"}'
'.slots.aminopept_act.annotations.storage_units = {"tag": "storage_units", "value": "mol/L/h"}'
'.slots.aminopept_act.examples = [{"value": "0.269 mol/L/h"}]'
'.slots.glucosidase_act.annotations.storage_units = {"tag": "storage_units", "value": "mol/L/h"}'
'.slots.glucosidase_act.examples = [{"value": "5 mol/L/h"}]'
'.slots.alkyl_diethers.annotations.storage_units = {"tag": "storage_units", "value": "mol/L"}'
'.slots.alkyl_diethers.examples = [{"value": "0.005 mol/L"}]'
'.slots.redox_potential.annotations.storage_units = {"tag": "storage_units", "value": "mV"}'
'.slots.redox_potential.examples = [{"value": "300 mV"}]'
'.slots.bacteria_carb_prod.annotations.storage_units = {"tag": "storage_units", "value": "ng/h"}'
'.slots.bacteria_carb_prod.examples = [{"value": "50 ng/h"}]'
'.slots.org_matter.annotations.storage_units = {"tag": "storage_units", "value": "ug/L"}'
'.slots.org_matter.examples = [{"value": "200 ug/L"}]'
'.slots.org_nitro.annotations.storage_units = {"tag": "storage_units", "value": "ug/L"}'
'.slots.org_nitro.examples = [{"value": "4 ug/L"}]'
'.slots.tot_inorg_nitro.annotations.storage_units = {"tag": "storage_units", "value": "ug/L"}'
'.slots.tot_inorg_nitro.examples = [{"value": "40 ug/L"}]'
'.slots.size_frac_low.annotations.storage_units = {"tag": "storage_units", "value": "um"}'
'.slots.size_frac_low.examples = [{"value": "0.2 um"}]'
'.slots.size_frac_up.annotations.storage_units = {"tag": "storage_units", "value": "um"}'
'.slots.size_frac_up.examples = [{"value": "20 um"}]'
'.slots.diss_hydrogen.annotations.storage_units = {"tag": "storage_units", "value": "umol/L"}'
'.slots.diss_hydrogen.examples = [{"value": "0.3 umol/L"}]'
'.slots.petroleum_hydrocarb.annotations.storage_units = {"tag": "storage_units", "value": "umol/L"}'
'.slots.petroleum_hydrocarb.examples = [{"value": "0.05 umol/L"}]'
'.slots.phosphate.annotations.storage_units = {"tag": "storage_units", "value": "umol/L"}'
'.slots.phosphate.examples = [{"value": "0.7 umol/L"}]'
'.slots.silicate.annotations.storage_units = {"tag": "storage_units", "value": "umol/L"}'
'.slots.silicate.examples = [{"value": "0.05 umol/L"}]'

# Add storage_units annotations for slots with multiple UCUM-compatible preferred units
'.slots.abs_air_humidity.annotations.storage_units = {"tag": "storage_units", "value": "[lb_av]|g/g|kg|kg/kg"}'
'.slots.abs_air_humidity.examples = [{"value": "9 g/g"}]'
'.slots.alkalinity.annotations.storage_units = {"tag": "storage_units", "value": "meq/L|mg/L"}'
'.slots.alkalinity.examples = [{"value": "50 mg/L"}]'
'.slots.ammonium.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L|umol/L"}'
'.slots.ammonium.examples = [{"value": "1.5 mg/L"}]'
'.slots.amount_light.annotations.storage_units = {"tag": "storage_units", "value": "lm/m2|lx"}'
'.slots.bac_resp.annotations.storage_units = {"tag": "storage_units", "value": "mg/m3/d|umol/L/h"}'
'.slots.bac_resp.examples = [{"value": "300 umol/L/h"}]'
'.slots.benzene.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L"}'
'.slots.bishomohopanol.annotations.storage_units = {"tag": "storage_units", "value": "ug/L|ug/g"}'
'.slots.bishomohopanol.examples = [{"value": "14 ug/L"}]'
'.slots.carb_dioxide.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|umol/L"}'
'.slots.carb_dioxide.examples = [{"value": "410 [ppm]"}]'
'.slots.carb_monoxide.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|umol/L"}'
'.slots.carb_monoxide.examples = [{"value": "0.1 [ppm]"}]'
'.slots.chloride.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L"}'
'.slots.chloride.examples = [{"value": "5000 mg/L"}]'
'.slots.chlorophyll.annotations.storage_units = {"tag": "storage_units", "value": "mg/m3|ug/L"}'
'.slots.chlorophyll.examples = [{"value": "5 mg/m3"}]'
'.slots.diss_carb_dioxide.annotations.storage_units = {"tag": "storage_units", "value": "mg/L|umol/L"}'
'.slots.diss_carb_dioxide.examples = [{"value": "5 mg/L"}]'
'.slots.diss_inorg_carb.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L|ug/L|umol/kg"}'
'.slots.diss_inorg_carb.examples = [{"value": "2059 umol/kg"}]'
'.slots.diss_inorg_phosp.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L|ug/L|umol/L"}'
'.slots.diss_inorg_phosp.examples = [{"value": "56.5 umol/L"}]'
'.slots.diss_org_nitro.annotations.storage_units = {"tag": "storage_units", "value": "mg/L|ug/L"}'
'.slots.diss_org_nitro.examples = [{"value": "0.05 mg/L"}]'
'.slots.diss_oxygen_fluid.annotations.storage_units = {"tag": "storage_units", "value": "mg/L|umol/kg"}'
'.slots.ethylbenzene.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L"}'
'.slots.floor_age.annotations.storage_units = {"tag": "storage_units", "value": "a|d|wk"}'
'.slots.host_age.annotations.storage_units = {"tag": "storage_units", "value": "a|d|h"}'
'.slots.host_age.examples = [{"value": "10 d"}]'
'.slots.host_dry_mass.annotations.storage_units = {"tag": "storage_units", "value": "g|kg"}'
'.slots.host_dry_mass.examples = [{"value": "500 g"}]'
'.slots.host_height.annotations.storage_units = {"tag": "storage_units", "value": "cm|m|mm"}'
'.slots.host_height.examples = [{"value": "0.1 m"}]'
'.slots.host_length.annotations.storage_units = {"tag": "storage_units", "value": "cm|m|mm"}'
'.slots.host_length.examples = [{"value": "1 m"}]'
'.slots.host_tot_mass.annotations.storage_units = {"tag": "storage_units", "value": "g|kg"}'
'.slots.host_tot_mass.examples = [{"value": "2500 g"}]'
'.slots.host_wet_mass.annotations.storage_units = {"tag": "storage_units", "value": "g|kg"}'
'.slots.host_wet_mass.examples = [{"value": "1500 g"}]'
'.slots.methane.annotations.storage_units = {"tag": "storage_units", "value": "[ppb]|[ppm]|umol/L"}'
'.slots.methane.examples = [{"value": "1800 [ppb]"}]'
'.slots.nitrate.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L|umol/L"}'
'.slots.nitrate.examples = [{"value": "65 umol/L"}]'
'.slots.nitrite.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L|umol/L"}'
'.slots.nitrite.examples = [{"value": "0.5 umol/L"}]'
'.slots.oxygen.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L"}'
'.slots.oxygen.examples = [{"value": "600 [ppm]"}]'
'.slots.primary_prod.annotations.storage_units = {"tag": "storage_units", "value": "g/m2/d|mg/m3/d"}'
'.slots.primary_prod.examples = [{"value": "100 mg/m3/d"}]'
'.slots.samp_size.annotations.storage_units = {"tag": "storage_units", "value": "L|g|mL|mg"}'
'.slots.samp_size.examples = [{"value": "5 L"}]'
'.slots.samp_vol_we_dna_ext.annotations.storage_units = {"tag": "storage_units", "value": "cm2|g|mL|mg"}'
'.slots.samp_vol_we_dna_ext.examples = [{"value": "1500 mL"}]'
'.slots.sodium.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L"}'
'.slots.sodium.examples = [{"value": "10.5 mg/L"}]'
'.slots.sulfate.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L|umol/L"}'
'.slots.sulfate.examples = [{"value": "5 umol/L"}]'
'.slots.sulfide.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L|umol/L"}'
'.slots.sulfide.examples = [{"value": "2 umol/L"}]'
'.slots.surf_moisture.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|g/m2|g/m3"}'
'.slots.surf_moisture.examples = [{"value": "0.01 g/m2"}]'
'.slots.toluene.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L"}'
'.slots.tot_iron.annotations.storage_units = {"tag": "storage_units", "value": "mg/L|mg/kg"}'
'.slots.tot_part_carb.annotations.storage_units = {"tag": "storage_units", "value": "ug/L|umol/L"}'
'.slots.tot_part_carb.examples = [{"value": "35 umol/L"}]'
'.slots.tot_phosp.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L|umol/L"}'
'.slots.tot_phosp.examples = [{"value": "0.03 mg/L"}]'
'.slots.tot_phosphate.annotations.storage_units = {"tag": "storage_units", "value": "ug/L|umol/L"}'
'.slots.tot_sulfur.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L"}'
'.slots.ventilation_rate.annotations.storage_units = {"tag": "storage_units", "value": "L/s|m3/min"}'
'.slots.ventilation_rate.examples = [{"value": "750 m3/min"}]'
'.slots.vfa.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L"}'
'.slots.water_current.annotations.storage_units = {"tag": "storage_units", "value": "[kn_i]|m3/s"}'
'.slots.water_current.examples = [{"value": "10 m3/s"}]'
'.slots.wind_speed.annotations.storage_units = {"tag": "storage_units", "value": "km/h|m/s"}'
'.slots.wind_speed.examples = [{"value": "21 km/h"}]'
'.slots.xylene.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L"}'

# MIxS doesn't specify '%'
'.slots.humidity.annotations.storage_units = {"tag": "storage_units", "value": "g/m3|%"}'
'.slots.humidity.examples = [{"value": "25 g/m3"}]'
'.slots.tot_nitro.annotations.storage_units = {"tag": "storage_units", "value": "mg/L|ug/L|umol/L|%"}'
'.slots.tot_nitro.examples = [{"value": "50 umol/L"}]'
'.slots.nitro.annotations.storage_units = {"tag": "storage_units", "value": "umol/L|%"}'
'.slots.nitro.examples = [{"value": "4.2 umol/L"}]'
'.slots.org_carb.annotations.storage_units = {"tag": "storage_units", "value": "umol/L|%|mg/L"}'
'.slots.org_carb.examples = [{"value": "0.015 mg/L"}]'
'.slots.tot_carb.annotations.storage_units = {"tag": "storage_units", "value": "ug/L|%"}'
'.slots.tot_nitro_content.annotations.storage_units = {"tag": "storage_units", "value": "mg/L|ug/L|umol/L|%"}'
'.slots.tot_nitro_content.examples = [{"value": "5 mg/L"}]'

# MIxS doesn't specify 'mg/kg'
'.slots.potassium.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L|mg/kg"}'
'.slots.potassium.examples = [{"value": "463 mg/L"}]'
'.slots.magnesium.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L|mol/L|umol/kg|mg/kg"}'
'.slots.magnesium.examples = [{"value": "52.8 umol/kg"}]'
'.slots.calcium.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L|umol/L|mg/kg"}'
'.slots.calcium.examples = [{"value": "0.2 umol/L"}]'

# MIxS doesn't specify 'mg/L'
'.slots.salinity.annotations.storage_units = {"tag": "storage_units", "value": "%|mg/L"}'
'.slots.salinity.examples = [{"value": "70 mg/L"}]'
'.slots.part_org_carb.annotations.storage_units = {"tag": "storage_units", "value": "ug/L|mg/L"}'
'.slots.part_org_carb.examples = [{"value": "0.02 mg/L"}]'
'.slots.diss_inorg_nitro.annotations.storage_units = {"tag": "storage_units", "value": "ug/L|umol/L|mg/L"}'
'.slots.diss_inorg_nitro.examples = [{"value": "761 umol/L"}]'
'.slots.part_org_nitro.annotations.storage_units = {"tag": "storage_units", "value": "ug/L|umol/L|mg/L"}'
'.slots.part_org_nitro.examples = [{"value": "0.3 umol/L"}]'

# MIxS doesn't specify 'ug/L'
'.slots.diss_org_carb.annotations.storage_units = {"tag": "storage_units", "value": "mg/L|umol/L|ug/L"}'
'.slots.diss_org_carb.examples = [{"value": "197 umol/L"}]'
'.slots.soluble_react_phosp.annotations.storage_units = {"tag": "storage_units", "value": "[ppm]|mg/L|umol/L|ug/L"}'
'.slots.soluble_react_phosp.examples = [{"value": "0.1 mg/L"}]'

# MIxS doesn't specify 'umol/L'
'.slots.diss_oxygen.annotations.storage_units = {"tag": "storage_units", "value": "mg/L|umol/kg|umol/L"}'
'.slots.diss_oxygen.examples = [{"value": "175 umol/L"}]'
'.slots.tot_diss_nitro.annotations.storage_units = {"tag": "storage_units", "value": "ug/L|umol/L"}'
'.slots.tot_diss_nitro.examples = [{"value": "40 ug/L"}]'

# MIxS doesn't specify 'kg/m3'
'.slots.density.annotations.storage_units = {"tag": "storage_units", "value": "g/cm3|g/m3|kg/m3"}'
'.slots.density.examples = [{"value": "1000 kg/m3"}]'

# MIxS doesn't specify 'uS/cm'
'.slots.conduc.annotations.storage_units = {"tag": "storage_units", "value": "mS/cm|uS/cm"}'
'.slots.conduc.examples = [{"value": "10 uS/cm"}]'

# MIxS says 'joule per degree Celsius'. UCUM says that's illegal division by a non-ration unit,
# so we use the essentially equivalent J/K instead
'.slots.ceil_thermal_mass.annotations.storage_units = {"tag": "storage_units", "value": "J/K"}'
'.slots.floor_thermal_mass.annotations.storage_units = {"tag": "storage_units", "value": "J/K"}'
'.slots.wall_thermal_mass.annotations.storage_units = {"tag": "storage_units", "value": "J/K"}'

# Protocol/regimen slots are TextValue/string range, so they don't need units annotations
'.slots.organism_count.annotations.storage_units = {"tag": "storage_units", "value": "1"}'


# MIxS has clear single UCUM-compatible preferred units

# MIxS provides multiple options but both are UCUM-compatible  
'.slots.solar_irradiance.annotations.storage_units = {"tag": "storage_units", "value": "kW/m2/d|erg/cm2/s"}'
'.slots.solar_irradiance.examples = [{"value": "1.36 kW/m2/d"}]'

# Same photon flux units as photon_flux slot (microEinstein per square meter per second)
'.slots.down_par.annotations.storage_units = {"tag": "storage_units", "value": "umol/m2/s"}'
'.slots.down_par.examples = [{"value": "28.71 umol/m2/s"}]'

# turbidity units - allowing both NTU and FNU which are standard turbidity units
'.slots.turbidity.annotations.storage_units = {"tag": "storage_units", "value": "[NTU]|[FNU]"}'
'.slots.turbidity.examples = [{"value": "0.3 [NTU]"}]'

# none of these units are specified by MIxS
'.slots.depth.annotations.storage_units = {"tag": "storage_units", "value": "m"}'
'.slots.depth.examples = [{"value": "10 m"}]'
'.slots.carb_nitro_ratio.annotations.storage_units = {"tag": "storage_units", "value": "1"}'
'.slots.tot_org_carb.annotations.storage_units = {"tag": "storage_units", "value": "mg/L"}'
'.slots.tot_org_carb.examples = [{"value": "5 mg/L"}]'
'.slots.fluor.annotations.storage_units = {"tag": "storage_units", "value": "mg/m3|V"}'
'.slots.fluor.examples = [{"value": "2.5 V"}]'
'.slots.photon_flux.annotations.storage_units = {"tag": "storage_units", "value": "umol/m2/s"}'
'.slots.photon_flux.examples = [{"value": "3.926 umol/m2/s"}]'

# Additional QuantityValue slots needing storage_units (from test failure analysis)
'.slots.alt.annotations.storage_units = {"tag": "storage_units", "value": "m"}'
'.slots.alt.examples = [{"value": "100 m"}]'
'.slots.root_med_ph.annotations.storage_units = {"tag": "storage_units", "value": "[pH]"}'
'.slots.max_occup.annotations.storage_units = {"tag": "storage_units", "value": "1"}'
'.slots.number_pets.annotations.storage_units = {"tag": "storage_units", "value": "1"}'
'.slots.number_plants.annotations.storage_units = {"tag": "storage_units", "value": "1"}'
'.slots.number_resident.annotations.storage_units = {"tag": "storage_units", "value": "1"}'
'.slots.room_occup.annotations.storage_units = {"tag": "storage_units", "value": "1"}'
'.slots.occup_samp.annotations.storage_units = {"tag": "storage_units", "value": "1"}'
'.slots.freq_clean.annotations.storage_units = {"tag": "storage_units", "value": "1/d"}'
'.slots.freq_cook.annotations.storage_units = {"tag": "storage_units", "value": "1/d"}'

# Add storage_units for slots that can be resolved with valid UCUM units
'.slots.specific_humidity.annotations.storage_units = {"tag": "storage_units", "value": "g/kg"}'
'.slots.tvdss_of_hcr_temp.annotations.storage_units = {"tag": "storage_units", "value": "m"}'

# Units alignment excuses for problematic MIxS specifications
'.slots.efficiency_percent.annotations.units_alignment_excuse = {"tag": "units_alignment_excuse", "value": "mixs_inconsistent"}'
'.slots.inside_lux.annotations.units_alignment_excuse = {"tag": "units_alignment_excuse", "value": "mixs_inconsistent"}'
'.slots.rel_humidity_out.annotations.units_alignment_excuse = {"tag": "units_alignment_excuse", "value": "mixs_inconsistent"}'
'.slots.api.annotations.units_alignment_excuse = {"tag": "units_alignment_excuse", "value": "non_ucum_unit"}'

# Units alignment excuses for MIxS slots with zero occurrences in production data
'.slots.exp_pipe.annotations.units_alignment_excuse = {"tag": "units_alignment_excuse", "value": "pending_analysis"}'
'.slots.occup_density_samp.annotations.units_alignment_excuse = {"tag": "units_alignment_excuse", "value": "pending_analysis"}'
'.slots.soil_text_measure.annotations.units_alignment_excuse = {"tag": "units_alignment_excuse", "value": "pending_analysis"}'

# Complex measurement slots that combine numeric and text data
'.slots.microbial_biomass.annotations.units_alignment_excuse = {"tag": "units_alignment_excuse", "value": "complex_unit"}'
