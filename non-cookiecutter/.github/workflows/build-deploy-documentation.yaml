name: Build and Deploy Static Mkdocs Documentation

# Controls when the action will run. Triggers the workflow on pull request
on:
  push:
    branches:
      - main

  repository_dispatch:
    types: trigger-build-deploy-documentation

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  github-pages:
    runs-on: ubuntu-latest
    
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Setup Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      
      #----------------------------------------------
      #          install pandoc
      #----------------------------------------------
      - name: Install pandoc
        run: sudo apt-get install pandoc
        
      #----------------------------------------------
      #          install & configure poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1.3
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      #----------------------------------------------
      #       load cached venv if cache exists      
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist 
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root     
        
      #----------------------------------------------
      #             generate markdown files
      #----------------------------------------------
      - run: make gen-doc

      #----------------------------------------------
      #               deploy documentation 
      #----------------------------------------------
      - run: make gh-deploy
